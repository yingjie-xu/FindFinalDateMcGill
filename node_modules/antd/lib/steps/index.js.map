{"version":3,"sources":["steps/index.jsx"],"names":["Steps","arguments","renderSteps","getPrefixCls","prefixCls","props","iconPrefix","icons","finish","error","React","Component","Step","RcSteps","defaultProps","current","propTypes","PropTypes","string","number"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;IACqBA,K;;;;;AACjB,mBAAc;AAAA;;AAAA;;AACV,gFAASC,SAAT;;AACA,UAAKC,WAAL,GAAmB,gBAAsB;AAAA,UAAnBC,YAAmB,QAAnBA,YAAmB;AACrC,UAAMC,SAAS,GAAGD,YAAY,CAAC,OAAD,EAAU,MAAKE,KAAL,CAAWD,SAArB,CAA9B;AACA,UAAME,UAAU,GAAGH,YAAY,CAAC,EAAD,EAAK,MAAKE,KAAL,CAAWC,UAAhB,CAA/B;AACA,UAAMC,KAAK,GAAG;AACVC,QAAAA,MAAM,EAAE,oBAAC,gBAAD;AAAM,UAAA,IAAI,EAAC,OAAX;AAAmB,UAAA,SAAS,YAAKJ,SAAL;AAA5B,UADE;AAEVK,QAAAA,KAAK,EAAE,oBAAC,gBAAD;AAAM,UAAA,IAAI,EAAC,OAAX;AAAmB,UAAA,SAAS,YAAKL,SAAL;AAA5B;AAFG,OAAd;AAIA,aAAO,oBAAC,mBAAD;AAAS,QAAA,KAAK,EAAEG;AAAhB,SAA2B,MAAKF,KAAhC;AAAuC,QAAA,SAAS,EAAED,SAAlD;AAA6D,QAAA,UAAU,EAAEE;AAAzE,SAAP;AACH,KARD;;AAFU;AAWb;;;;6BACQ;AACL,aAAO,oBAAC,8BAAD,QAAiB,KAAKJ,WAAtB,CAAP;AACH;;;;EAf8BQ,KAAK,CAACC,S;;;AAiBzCX,KAAK,CAACY,IAAN,GAAaC,oBAAQD,IAArB;AACAZ,KAAK,CAACc,YAAN,GAAqB;AACjBC,EAAAA,OAAO,EAAE;AADQ,CAArB;AAGAf,KAAK,CAACgB,SAAN,GAAkB;AACdZ,EAAAA,SAAS,EAAEa,SAAS,CAACC,MADP;AAEdZ,EAAAA,UAAU,EAAEW,SAAS,CAACC,MAFR;AAGdH,EAAAA,OAAO,EAAEE,SAAS,CAACE;AAHL,CAAlB","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport RcSteps from 'rc-steps';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nexport default class Steps extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderSteps = ({ getPrefixCls }) => {\n            const prefixCls = getPrefixCls('steps', this.props.prefixCls);\n            const iconPrefix = getPrefixCls('', this.props.iconPrefix);\n            const icons = {\n                finish: <Icon type=\"check\" className={`${prefixCls}-finish-icon`}/>,\n                error: <Icon type=\"close\" className={`${prefixCls}-error-icon`}/>,\n            };\n            return <RcSteps icons={icons} {...this.props} prefixCls={prefixCls} iconPrefix={iconPrefix}/>;\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderSteps}</ConfigConsumer>;\n    }\n}\nSteps.Step = RcSteps.Step;\nSteps.defaultProps = {\n    current: 0,\n};\nSteps.propTypes = {\n    prefixCls: PropTypes.string,\n    iconPrefix: PropTypes.string,\n    current: PropTypes.number,\n};\n"],"file":"index.js"}