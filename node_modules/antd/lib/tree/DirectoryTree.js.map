{"version":3,"sources":["tree/DirectoryTree.jsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","getIcon","props","isLeaf","expanded","DirectoryTree","onExpand","expandedKeys","info","setUncontrolledState","undefined","onClick","event","node","expandAction","onDebounceExpand","onDoubleClick","onSelect","keys","multiple","children","state","nativeEvent","eventKey","newState","newEvent","selected","ctrlPick","ctrlKey","metaKey","shiftPick","shiftKey","newSelectedKeys","lastSelectedKey","cachedSelectedKeys","selectedNodes","Array","from","Set","selectedKeys","setTreeRef","tree","expandFolderNode","internalTree","onNodeExpand","setState","renderDirectoryTree","getPrefixCls","_a","customizePrefixCls","prefixCls","className","connectClassName","defaultExpandAll","defaultExpandParent","defaultExpandedKeys","keyEntities","defaultSelectedKeys","treeData","leading","nextProps","React","Component","defaultProps","showIcon"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport debounce from 'lodash/debounce';\nimport { conductExpandParent, convertTreeToEntities } from 'rc-tree/lib/util';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { ConfigConsumer } from '../config-provider';\nimport Tree from './Tree';\nimport { calcRangeKeys, getFullKeyList, convertDirectoryKeysToNodes, getFullKeyListByTreeData, } from './util';\nimport Icon from '../icon';\nfunction getIcon(props) {\n    const { isLeaf, expanded } = props;\n    if (isLeaf) {\n        return <Icon type=\"file\"/>;\n    }\n    return <Icon type={expanded ? 'folder-open' : 'folder'}/>;\n}\nclass DirectoryTree extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onExpand = (expandedKeys, info) => {\n            const { onExpand } = this.props;\n            this.setUncontrolledState({ expandedKeys });\n            // Call origin function\n            if (onExpand) {\n                return onExpand(expandedKeys, info);\n            }\n            return undefined;\n        };\n        this.onClick = (event, node) => {\n            const { onClick, expandAction } = this.props;\n            // Expand the tree\n            if (expandAction === 'click') {\n                this.onDebounceExpand(event, node);\n            }\n            if (onClick) {\n                onClick(event, node);\n            }\n        };\n        this.onDoubleClick = (event, node) => {\n            const { onDoubleClick, expandAction } = this.props;\n            // Expand the tree\n            if (expandAction === 'doubleClick') {\n                this.onDebounceExpand(event, node);\n            }\n            if (onDoubleClick) {\n                onDoubleClick(event, node);\n            }\n        };\n        this.onSelect = (keys, event) => {\n            const { onSelect, multiple, children } = this.props;\n            const { expandedKeys = [] } = this.state;\n            const { node, nativeEvent } = event;\n            const { eventKey = '' } = node.props;\n            const newState = {};\n            // We need wrap this event since some value is not same\n            const newEvent = Object.assign(Object.assign({}, event), { selected: true });\n            // Windows / Mac single pick\n            const ctrlPick = nativeEvent.ctrlKey || nativeEvent.metaKey;\n            const shiftPick = nativeEvent.shiftKey;\n            // Generate new selected keys\n            let newSelectedKeys;\n            if (multiple && ctrlPick) {\n                // Control click\n                newSelectedKeys = keys;\n                this.lastSelectedKey = eventKey;\n                this.cachedSelectedKeys = newSelectedKeys;\n                newEvent.selectedNodes = convertDirectoryKeysToNodes(children, newSelectedKeys);\n            }\n            else if (multiple && shiftPick) {\n                // Shift click\n                newSelectedKeys = Array.from(new Set([\n                    ...(this.cachedSelectedKeys || []),\n                    ...calcRangeKeys(children, expandedKeys, eventKey, this.lastSelectedKey),\n                ]));\n                newEvent.selectedNodes = convertDirectoryKeysToNodes(children, newSelectedKeys);\n            }\n            else {\n                // Single click\n                newSelectedKeys = [eventKey];\n                this.lastSelectedKey = eventKey;\n                this.cachedSelectedKeys = newSelectedKeys;\n                newEvent.selectedNodes = [event.node];\n            }\n            newState.selectedKeys = newSelectedKeys;\n            if (onSelect) {\n                onSelect(newSelectedKeys, newEvent);\n            }\n            this.setUncontrolledState(newState);\n        };\n        this.setTreeRef = (node) => {\n            this.tree = node;\n        };\n        this.expandFolderNode = (event, node) => {\n            const { isLeaf } = node.props;\n            if (isLeaf || event.shiftKey || event.metaKey || event.ctrlKey) {\n                return;\n            }\n            // Get internal rc-tree\n            const internalTree = this.tree.tree;\n            // Call internal rc-tree expand function\n            // https://github.com/ant-design/ant-design/issues/12567\n            internalTree.onNodeExpand(event, node);\n        };\n        this.setUncontrolledState = (state) => {\n            const newState = omit(state, Object.keys(this.props));\n            if (Object.keys(newState).length) {\n                this.setState(newState);\n            }\n        };\n        this.renderDirectoryTree = ({ getPrefixCls }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, className } = _a, props = __rest(_a, [\"prefixCls\", \"className\"]);\n            const { expandedKeys, selectedKeys } = this.state;\n            const prefixCls = getPrefixCls('tree', customizePrefixCls);\n            const connectClassName = classNames(`${prefixCls}-directory`, className);\n            return (<Tree icon={getIcon} ref={this.setTreeRef} {...props} prefixCls={prefixCls} className={connectClassName} expandedKeys={expandedKeys} selectedKeys={selectedKeys} onSelect={this.onSelect} onClick={this.onClick} onDoubleClick={this.onDoubleClick} onExpand={this.onExpand}/>);\n        };\n        const { defaultExpandAll, defaultExpandParent, expandedKeys, defaultExpandedKeys, children, } = props;\n        const { keyEntities } = convertTreeToEntities(children);\n        // Selected keys\n        this.state = {\n            selectedKeys: props.selectedKeys || props.defaultSelectedKeys || [],\n        };\n        // Expanded keys\n        if (defaultExpandAll) {\n            if (props.treeData) {\n                this.state.expandedKeys = getFullKeyListByTreeData(props.treeData);\n            }\n            else {\n                this.state.expandedKeys = getFullKeyList(props.children);\n            }\n        }\n        else if (defaultExpandParent) {\n            this.state.expandedKeys = conductExpandParent(expandedKeys || defaultExpandedKeys, keyEntities);\n        }\n        else {\n            this.state.expandedKeys = expandedKeys || defaultExpandedKeys;\n        }\n        this.onDebounceExpand = debounce(this.expandFolderNode, 200, {\n            leading: true,\n        });\n    }\n    static getDerivedStateFromProps(nextProps) {\n        const newState = {};\n        if ('expandedKeys' in nextProps) {\n            newState.expandedKeys = nextProps.expandedKeys;\n        }\n        if ('selectedKeys' in nextProps) {\n            newState.selectedKeys = nextProps.selectedKeys;\n        }\n        return newState;\n    }\n    render() {\n        return <ConfigConsumer>{this.renderDirectoryTree}</ConfigConsumer>;\n    }\n}\nDirectoryTree.defaultProps = {\n    showIcon: true,\n    expandAction: 'click',\n};\npolyfill(DirectoryTree);\nexport default DirectoryTree;\n"],"file":"DirectoryTree.js"}