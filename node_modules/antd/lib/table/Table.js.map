{"version":3,"sources":["table/Table.jsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","noop","stopPropagation","getRowSelection","props","rowSelection","getColumnKey","column","index","key","dataIndex","isSameColumn","a","b","value","other","toString","Array","isArray","defaultPagination","onChange","onShowSizeChange","emptyObject","createComponents","components","bodyRow","body","row","isTheSameComponents","components1","components2","every","getFilteredValueColumns","state","columns","filteredValue","getFiltersFromColumns","filters","forEach","col","colKey","isFiltersChanged","keys","some","columnKey","Table","setTableRef","table","rcTable","getCheckboxPropsByItem","item","getCheckboxProps","getRecordKey","checkboxPropsCache","checkboxProps","record","rowKey","recordKey","undefined","onRow","prefixCls","custom","store","generatePopupContainerFunc","getPopupContainer","scroll","tableNode","scrollToFirstRow","scrollToFirstRowOnChange","getContainer","bodyTable","handleFilter","nextFilters","pagination","currentColumnKeys","c","children","push","current","newState","filtersToSetState","setState","selectionDirty","apply","prepareParamsArguments","handleSelect","rowIndex","checked","target","nativeEvent","defaultSelection","getState","getDefaultSelection","selectedRowKeys","concat","pivot","rows","getFlatCurrentPageData","realIndex","expandedRowRender","findIndex","shiftKey","changeRowKeys","direction","Math","sign","dist","abs","step","disabled","includes","filter","j","setSelectedRowKeys","selectWay","handleRadioSelect","handleSelectRow","selectionKey","onSelectFunc","data","changeableRowKeys","map","splice","customSelectionStartIndex","hideDefaultSelections","handlePageChange","otherArguments","handleShowSizeChange","pageSize","nextPagination","renderExpandIcon","expandable","expanded","needIndentSpaced","onExpand","defaultLocale","locale","event","collapse","expand","renderSelectionBox","type","_","handleChange","renderTable","renderEmpty","dropdownPrefixCls","contextLocale","contextGetPopupContainer","_a","showHeader","restTableProps","restProps","getCurrentPageData","expandIconAsCell","realGetPopupContainer","mergedLocale","emptyText","classString","size","bordered","columnsWithRowSelection","renderRowSelection","renderColumnsDropdown","newColumn","expandIconColumnIndex","renderComponent","getPrefixCls","customizePrefixCls","customizeDropdownPrefixCls","style","className","loading","spinning","paginationPatchClass","hasPagination","renderPagination","columnsProp","fixed","getDefaultSortOrder","getDefaultFilters","getDefaultPagination","prevProps","sortColumn","sortOrder","getSortOrderColumns","sortState","getSortStateFromColumns","getFlatData","defaultChecked","defaultCurrent","defaultPageSize","definedFilters","defaultFilteredValueColumns","defaultFilteredValue","defaultFilters","reduce","soFar","definedSortState","defaultSortedColumn","defaultSortOrder","sortedColumn","total","floor","sorter","result","getLocalData","Number","MAX_VALUE","getMaxCurrent","slice","childrenColumnName","currentState","dataSource","sorterFn","getSorterFn","recursiveSort","findColumn","values","onFilter","v","selectionInfo","selectedRows","onSelect","onSelectMultiple","changeRows","onSelectAll","onSelectInvert","sortDirections","newSortOrder","methodIndex","currentColumn","order","field","extra","currentDataSource","myKey","sort","paginationPosition","position","selectionColumnClass","selections","selectionColumn","render","width","columnWidth","title","columnTitle","INTERNAL_COL_DEFINE","checkboxAllDisabled","unshift","filterDropdown","sortButton","onHeaderCell","isSortColumn","colFilters","isAscend","isDescend","ascend","descend","sortTitle","colProps","onHeaderCellClick","onClick","toggleSortOrder","renderColumnTitle","Function","nextProps","prevState","nextState","newPagination","setCheckboxPropsCache","filteredValueColumns","filtersFromColumns","newFilters","React","Component","propTypes","PropTypes","array","string","useFixedHeader","bool","object","oneOfType","func","defaultProps","indentSize","StoreTable","cache","CheckboxPropsCache","displayName","Column","ColumnGroup"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/* eslint-disable prefer-spread */\nimport * as React from 'react';\nimport omit from 'omit.js';\nimport RcTable, { INTERNAL_COL_DEFINE } from 'rc-table';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport { polyfill } from 'react-lifecycles-compat';\nimport FilterDropdown from './filterDropdown';\nimport createStore from './createStore';\nimport SelectionBox from './SelectionBox';\nimport SelectionCheckboxAll from './SelectionCheckboxAll';\nimport Column from './Column';\nimport ColumnGroup from './ColumnGroup';\nimport createBodyRow from './createBodyRow';\nimport { flatArray, treeMap, flatFilter, normalizeColumns } from './util';\nimport scrollTo from '../_util/scrollTo';\nimport Pagination from '../pagination';\nimport Icon from '../icon';\nimport Spin from '../spin';\nimport TransButton from '../_util/transButton';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nfunction noop() { }\nfunction stopPropagation(e) {\n    e.stopPropagation();\n}\nfunction getRowSelection(props) {\n    return props.rowSelection || {};\n}\nfunction getColumnKey(column, index) {\n    return column.key || column.dataIndex || index;\n}\nfunction isSameColumn(a, b) {\n    if (a && b && a.key && a.key === b.key) {\n        return true;\n    }\n    return (a === b ||\n        shallowEqual(a, b, (value, other) => {\n            // https://github.com/ant-design/ant-design/issues/12737\n            if (typeof value === 'function' && typeof other === 'function') {\n                return value === other || value.toString() === other.toString();\n            }\n            // https://github.com/ant-design/ant-design/issues/19398\n            if (Array.isArray(value) && Array.isArray(other)) {\n                return value === other || shallowEqual(value, other);\n            }\n        }));\n}\nconst defaultPagination = {\n    onChange: noop,\n    onShowSizeChange: noop,\n};\n/**\n * Avoid creating new object, so that parent component's shouldComponentUpdate\n * can works appropriately。\n */\nconst emptyObject = {};\nconst createComponents = (components = {}) => {\n    const bodyRow = components && components.body && components.body.row;\n    return Object.assign(Object.assign({}, components), { body: Object.assign(Object.assign({}, components.body), { row: createBodyRow(bodyRow) }) });\n};\nfunction isTheSameComponents(components1 = {}, components2 = {}) {\n    return (components1 === components2 ||\n        ['table', 'header', 'body'].every((key) => shallowEqual(components1[key], components2[key])));\n}\nfunction getFilteredValueColumns(state, columns) {\n    return flatFilter(columns || (state || {}).columns || [], (column) => typeof column.filteredValue !== 'undefined');\n}\nfunction getFiltersFromColumns(state = {}, columns) {\n    const filters = {};\n    getFilteredValueColumns(state, columns).forEach((col) => {\n        const colKey = getColumnKey(col);\n        filters[colKey] = col.filteredValue;\n    });\n    return filters;\n}\nfunction isFiltersChanged(state, filters) {\n    if (Object.keys(filters).length !== Object.keys(state.filters).length) {\n        return true;\n    }\n    return Object.keys(filters).some(columnKey => filters[columnKey] !== state.filters[columnKey]);\n}\nclass Table extends React.Component {\n    constructor(props) {\n        super(props);\n        this.setTableRef = (table) => {\n            this.rcTable = table;\n        };\n        this.getCheckboxPropsByItem = (item, index) => {\n            const rowSelection = getRowSelection(this.props);\n            if (!rowSelection.getCheckboxProps) {\n                return {};\n            }\n            const key = this.getRecordKey(item, index);\n            // Cache checkboxProps\n            if (!this.props.checkboxPropsCache[key]) {\n                this.props.checkboxPropsCache[key] = rowSelection.getCheckboxProps(item) || {};\n                const checkboxProps = this.props.checkboxPropsCache[key];\n                warning(!('checked' in checkboxProps) && !('defaultChecked' in checkboxProps), 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n            }\n            return this.props.checkboxPropsCache[key];\n        };\n        this.getRecordKey = (record, index) => {\n            const { rowKey } = this.props;\n            const recordKey = typeof rowKey === 'function' ? rowKey(record, index) : record[rowKey];\n            warning(recordKey !== undefined, 'Table', 'Each record in dataSource of table should have a unique `key` prop, ' +\n                'or set `rowKey` of Table to an unique primary key, ' +\n                'see https://u.ant.design/table-row-key');\n            return recordKey === undefined ? index : recordKey;\n        };\n        this.onRow = (prefixCls, record, index) => {\n            const { onRow } = this.props;\n            const custom = onRow ? onRow(record, index) : {};\n            return Object.assign(Object.assign({}, custom), { prefixCls, store: this.props.store, rowKey: this.getRecordKey(record, index) });\n        };\n        this.generatePopupContainerFunc = (getPopupContainer) => {\n            const { scroll } = this.props;\n            const table = this.rcTable;\n            if (getPopupContainer) {\n                return getPopupContainer;\n            }\n            // Use undefined to let rc component use default logic.\n            return scroll && table ? () => table.tableNode : undefined;\n        };\n        this.scrollToFirstRow = () => {\n            const { scroll } = this.props;\n            if (scroll && scroll.scrollToFirstRowOnChange !== false) {\n                scrollTo(0, {\n                    getContainer: () => this.rcTable.bodyTable,\n                });\n            }\n        };\n        this.handleFilter = (column, nextFilters) => {\n            const props = this.props;\n            const pagination = Object.assign({}, this.state.pagination);\n            const filters = Object.assign(Object.assign({}, this.state.filters), { [getColumnKey(column)]: nextFilters });\n            // Remove filters not in current columns\n            const currentColumnKeys = [];\n            treeMap(this.state.columns, c => {\n                if (!c.children) {\n                    currentColumnKeys.push(getColumnKey(c));\n                }\n            });\n            Object.keys(filters).forEach(columnKey => {\n                if (currentColumnKeys.indexOf(columnKey) < 0) {\n                    delete filters[columnKey];\n                }\n            });\n            if (props.pagination) {\n                // Reset current prop\n                pagination.current = 1;\n                pagination.onChange(pagination.current);\n            }\n            const newState = {\n                pagination,\n                filters: {},\n            };\n            const filtersToSetState = Object.assign({}, filters);\n            // Remove filters which is controlled\n            getFilteredValueColumns(this.state).forEach((col) => {\n                const columnKey = getColumnKey(col);\n                if (columnKey) {\n                    delete filtersToSetState[columnKey];\n                }\n            });\n            if (Object.keys(filtersToSetState).length > 0) {\n                newState.filters = filtersToSetState;\n            }\n            // Controlled current prop will not respond user interaction\n            if (typeof props.pagination === 'object' && 'current' in props.pagination) {\n                newState.pagination = Object.assign(Object.assign({}, pagination), { current: this.state.pagination.current });\n            }\n            this.setState(newState, () => {\n                this.scrollToFirstRow();\n                this.props.store.setState({\n                    selectionDirty: false,\n                });\n                const { onChange } = this.props;\n                if (onChange) {\n                    onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), { selectionDirty: false, filters,\n                        pagination })));\n                }\n            });\n        };\n        this.handleSelect = (record, rowIndex, e) => {\n            const checked = e.target.checked;\n            const nativeEvent = e.nativeEvent;\n            const defaultSelection = this.props.store.getState().selectionDirty\n                ? []\n                : this.getDefaultSelection();\n            let selectedRowKeys = this.props.store.getState().selectedRowKeys.concat(defaultSelection);\n            const key = this.getRecordKey(record, rowIndex);\n            const { pivot } = this.state;\n            const rows = this.getFlatCurrentPageData();\n            let realIndex = rowIndex;\n            if (this.props.expandedRowRender) {\n                realIndex = rows.findIndex(row => this.getRecordKey(row, rowIndex) === key);\n            }\n            if (nativeEvent.shiftKey && pivot !== undefined && realIndex !== pivot) {\n                const changeRowKeys = [];\n                const direction = Math.sign(pivot - realIndex);\n                const dist = Math.abs(pivot - realIndex);\n                let step = 0;\n                while (step <= dist) {\n                    const i = realIndex + step * direction;\n                    step += 1;\n                    const row = rows[i];\n                    const rowKey = this.getRecordKey(row, i);\n                    const checkboxProps = this.getCheckboxPropsByItem(row, i);\n                    if (!checkboxProps.disabled) {\n                        if (selectedRowKeys.includes(rowKey)) {\n                            if (!checked) {\n                                selectedRowKeys = selectedRowKeys.filter((j) => rowKey !== j);\n                                changeRowKeys.push(rowKey);\n                            }\n                        }\n                        else if (checked) {\n                            selectedRowKeys.push(rowKey);\n                            changeRowKeys.push(rowKey);\n                        }\n                    }\n                }\n                this.setState({ pivot: realIndex });\n                this.props.store.setState({\n                    selectionDirty: true,\n                });\n                this.setSelectedRowKeys(selectedRowKeys, {\n                    selectWay: 'onSelectMultiple',\n                    record,\n                    checked,\n                    changeRowKeys,\n                    nativeEvent,\n                });\n            }\n            else {\n                if (checked) {\n                    selectedRowKeys.push(this.getRecordKey(record, realIndex));\n                }\n                else {\n                    selectedRowKeys = selectedRowKeys.filter((i) => key !== i);\n                }\n                this.setState({ pivot: realIndex });\n                this.props.store.setState({\n                    selectionDirty: true,\n                });\n                this.setSelectedRowKeys(selectedRowKeys, {\n                    selectWay: 'onSelect',\n                    record,\n                    checked,\n                    changeRowKeys: undefined,\n                    nativeEvent,\n                });\n            }\n        };\n        this.handleRadioSelect = (record, rowIndex, e) => {\n            const checked = e.target.checked;\n            const nativeEvent = e.nativeEvent;\n            const key = this.getRecordKey(record, rowIndex);\n            const selectedRowKeys = [key];\n            this.props.store.setState({\n                selectionDirty: true,\n            });\n            this.setSelectedRowKeys(selectedRowKeys, {\n                selectWay: 'onSelect',\n                record,\n                checked,\n                changeRowKeys: undefined,\n                nativeEvent,\n            });\n        };\n        this.handleSelectRow = (selectionKey, index, onSelectFunc) => {\n            const data = this.getFlatCurrentPageData();\n            const defaultSelection = this.props.store.getState().selectionDirty\n                ? []\n                : this.getDefaultSelection();\n            const selectedRowKeys = this.props.store.getState().selectedRowKeys.concat(defaultSelection);\n            const changeableRowKeys = data\n                .filter((item, i) => !this.getCheckboxPropsByItem(item, i).disabled)\n                .map((item, i) => this.getRecordKey(item, i));\n            const changeRowKeys = [];\n            let selectWay = 'onSelectAll';\n            let checked;\n            // handle default selection\n            switch (selectionKey) {\n                case 'all':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) < 0) {\n                            selectedRowKeys.push(key);\n                            changeRowKeys.push(key);\n                        }\n                    });\n                    selectWay = 'onSelectAll';\n                    checked = true;\n                    break;\n                case 'removeAll':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) >= 0) {\n                            selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n                            changeRowKeys.push(key);\n                        }\n                    });\n                    selectWay = 'onSelectAll';\n                    checked = false;\n                    break;\n                case 'invert':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) < 0) {\n                            selectedRowKeys.push(key);\n                        }\n                        else {\n                            selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n                        }\n                        changeRowKeys.push(key);\n                        selectWay = 'onSelectInvert';\n                    });\n                    break;\n                default:\n                    break;\n            }\n            this.props.store.setState({\n                selectionDirty: true,\n            });\n            // when select custom selection, callback selections[n].onSelect\n            const { rowSelection } = this.props;\n            let customSelectionStartIndex = 2;\n            if (rowSelection && rowSelection.hideDefaultSelections) {\n                customSelectionStartIndex = 0;\n            }\n            if (index >= customSelectionStartIndex && typeof onSelectFunc === 'function') {\n                return onSelectFunc(changeableRowKeys);\n            }\n            this.setSelectedRowKeys(selectedRowKeys, {\n                selectWay,\n                checked,\n                changeRowKeys,\n            });\n        };\n        this.handlePageChange = (current, ...otherArguments) => {\n            const props = this.props;\n            const pagination = Object.assign({}, this.state.pagination);\n            if (current) {\n                pagination.current = current;\n            }\n            else {\n                pagination.current = pagination.current || 1;\n            }\n            pagination.onChange(pagination.current, ...otherArguments);\n            const newState = {\n                pagination,\n            };\n            // Controlled current prop will not respond user interaction\n            if (props.pagination && typeof props.pagination === 'object' && 'current' in props.pagination) {\n                newState.pagination = Object.assign(Object.assign({}, pagination), { current: this.state.pagination.current });\n            }\n            this.setState(newState, this.scrollToFirstRow);\n            this.props.store.setState({\n                selectionDirty: false,\n            });\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), { selectionDirty: false, pagination })));\n            }\n        };\n        this.handleShowSizeChange = (current, pageSize) => {\n            const { pagination } = this.state;\n            pagination.onShowSizeChange(current, pageSize);\n            const nextPagination = Object.assign(Object.assign({}, pagination), { pageSize,\n                current });\n            this.setState({ pagination: nextPagination }, this.scrollToFirstRow);\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), { pagination: nextPagination })));\n            }\n        };\n        this.renderExpandIcon = (prefixCls) => ({ expandable, expanded, needIndentSpaced, record, onExpand, }) => {\n            if (expandable) {\n                return (<LocaleReceiver componentName=\"Table\" defaultLocale={defaultLocale.Table}>\n          {(locale) => (<TransButton className={classNames(`${prefixCls}-row-expand-icon`, {\n                    [`${prefixCls}-row-collapsed`]: !expanded,\n                    [`${prefixCls}-row-expanded`]: expanded,\n                })} onClick={event => {\n                    onExpand(record, event);\n                }} aria-label={expanded ? locale.collapse : locale.expand} noStyle/>)}\n        </LocaleReceiver>);\n            }\n            if (needIndentSpaced) {\n                return <span className={`${prefixCls}-row-expand-icon ${prefixCls}-row-spaced`}/>;\n            }\n            return null;\n        };\n        this.renderSelectionBox = (type) => {\n            return (_, record, index) => {\n                const rowKey = this.getRecordKey(record, index);\n                const props = this.getCheckboxPropsByItem(record, index);\n                const handleChange = (e) => type === 'radio'\n                    ? this.handleRadioSelect(record, index, e)\n                    : this.handleSelect(record, index, e);\n                return (<span onClick={stopPropagation}>\n          <SelectionBox type={type} store={this.props.store} rowIndex={rowKey} onChange={handleChange} defaultSelection={this.getDefaultSelection()} {...props}/>\n        </span>);\n            };\n        };\n        this.renderTable = ({ prefixCls, renderEmpty, dropdownPrefixCls, contextLocale, getPopupContainer: contextGetPopupContainer, }) => {\n            const _a = this.props, { showHeader, locale, getPopupContainer } = _a, restTableProps = __rest(_a, [\"showHeader\", \"locale\", \"getPopupContainer\"]);\n            // do not pass prop.style to rc-table, since already apply it to container div\n            const restProps = omit(restTableProps, ['style']);\n            const data = this.getCurrentPageData();\n            const expandIconAsCell = this.props.expandedRowRender && this.props.expandIconAsCell !== false;\n            // use props.getPopupContainer first\n            const realGetPopupContainer = getPopupContainer || contextGetPopupContainer;\n            // Merge too locales\n            const mergedLocale = Object.assign(Object.assign({}, contextLocale), locale);\n            if (!locale || !locale.emptyText) {\n                mergedLocale.emptyText = renderEmpty('Table');\n            }\n            const classString = classNames(`${prefixCls}-${this.props.size}`, {\n                [`${prefixCls}-bordered`]: this.props.bordered,\n                [`${prefixCls}-empty`]: !data.length,\n                [`${prefixCls}-without-column-header`]: !showHeader,\n            });\n            const columnsWithRowSelection = this.renderRowSelection({\n                prefixCls,\n                locale: mergedLocale,\n                getPopupContainer: realGetPopupContainer,\n            });\n            const columns = this.renderColumnsDropdown({\n                columns: columnsWithRowSelection,\n                prefixCls,\n                dropdownPrefixCls,\n                locale: mergedLocale,\n                getPopupContainer: realGetPopupContainer,\n            }).map((column, i) => {\n                const newColumn = Object.assign({}, column);\n                newColumn.key = getColumnKey(newColumn, i);\n                return newColumn;\n            });\n            let expandIconColumnIndex = columns[0] && columns[0].key === 'selection-column' ? 1 : 0;\n            if ('expandIconColumnIndex' in restProps) {\n                expandIconColumnIndex = restProps.expandIconColumnIndex;\n            }\n            return (<RcTable ref={this.setTableRef} key=\"table\" expandIcon={this.renderExpandIcon(prefixCls)} {...restProps} onRow={(record, index) => this.onRow(prefixCls, record, index)} components={this.state.components} prefixCls={prefixCls} data={data} columns={columns} showHeader={showHeader} className={classString} expandIconColumnIndex={expandIconColumnIndex} expandIconAsCell={expandIconAsCell} emptyText={mergedLocale.emptyText}/>);\n        };\n        this.renderComponent = ({ getPrefixCls, renderEmpty, getPopupContainer }) => {\n            const { prefixCls: customizePrefixCls, dropdownPrefixCls: customizeDropdownPrefixCls, style, className, } = this.props;\n            const data = this.getCurrentPageData();\n            let loading = this.props.loading;\n            if (typeof loading === 'boolean') {\n                loading = {\n                    spinning: loading,\n                };\n            }\n            const prefixCls = getPrefixCls('table', customizePrefixCls);\n            const dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\n            const table = (<LocaleReceiver componentName=\"Table\" defaultLocale={defaultLocale.Table}>\n        {locale => this.renderTable({\n                prefixCls,\n                renderEmpty,\n                dropdownPrefixCls,\n                contextLocale: locale,\n                getPopupContainer,\n            })}\n      </LocaleReceiver>);\n            // if there is no pagination or no data,\n            // the height of spin should decrease by half of pagination\n            const paginationPatchClass = this.hasPagination() && data && data.length !== 0\n                ? `${prefixCls}-with-pagination`\n                : `${prefixCls}-without-pagination`;\n            return (<div className={classNames(`${prefixCls}-wrapper`, className)} style={style}>\n        <Spin {...loading} className={loading.spinning ? `${paginationPatchClass} ${prefixCls}-spin-holder` : ''}>\n          {this.renderPagination(prefixCls, 'top')}\n          {table}\n          {this.renderPagination(prefixCls, 'bottom')}\n        </Spin>\n      </div>);\n        };\n        const { expandedRowRender, columns: columnsProp } = props;\n        warning(!('columnsPageRange' in props || 'columnsPageSize' in props), 'Table', '`columnsPageRange` and `columnsPageSize` are removed, please use ' +\n            'fixed columns instead, see: https://u.ant.design/fixed-columns.');\n        if (expandedRowRender && (columnsProp || []).some(({ fixed }) => !!fixed)) {\n            warning(false, 'Table', '`expandedRowRender` and `Column.fixed` are not compatible. Please use one of them at one time.');\n        }\n        const columns = columnsProp || normalizeColumns(props.children);\n        this.state = Object.assign(Object.assign({}, this.getDefaultSortOrder(columns || [])), { \n            // 减少状态\n            filters: this.getDefaultFilters(columns), pagination: this.getDefaultPagination(props), pivot: undefined, prevProps: props, components: createComponents(props.components), columns });\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const { prevProps } = prevState;\n        const columns = nextProps.columns || normalizeColumns(nextProps.children);\n        let nextState = Object.assign(Object.assign({}, prevState), { prevProps: nextProps, columns });\n        if ('pagination' in nextProps || 'pagination' in prevProps) {\n            const newPagination = Object.assign(Object.assign(Object.assign({}, defaultPagination), prevState.pagination), nextProps.pagination);\n            newPagination.current = newPagination.current || 1;\n            newPagination.pageSize = newPagination.pageSize || 10;\n            nextState = Object.assign(Object.assign({}, nextState), { pagination: nextProps.pagination !== false ? newPagination : emptyObject });\n        }\n        if (nextProps.rowSelection && 'selectedRowKeys' in nextProps.rowSelection) {\n            nextProps.store.setState({\n                selectedRowKeys: nextProps.rowSelection.selectedRowKeys || [],\n            });\n        }\n        else if (prevProps.rowSelection && !nextProps.rowSelection) {\n            nextProps.store.setState({\n                selectedRowKeys: [],\n            });\n        }\n        if ('dataSource' in nextProps && nextProps.dataSource !== prevProps.dataSource) {\n            nextProps.store.setState({\n                selectionDirty: false,\n            });\n        }\n        // https://github.com/ant-design/ant-design/issues/10133\n        nextProps.setCheckboxPropsCache({});\n        // Update filters\n        const filteredValueColumns = getFilteredValueColumns(nextState, nextState.columns);\n        if (filteredValueColumns.length > 0) {\n            const filtersFromColumns = getFiltersFromColumns(nextState, nextState.columns);\n            const newFilters = Object.assign({}, nextState.filters);\n            Object.keys(filtersFromColumns).forEach(key => {\n                newFilters[key] = filtersFromColumns[key];\n            });\n            if (isFiltersChanged(nextState, newFilters)) {\n                nextState = Object.assign(Object.assign({}, nextState), { filters: newFilters });\n            }\n        }\n        if (!isTheSameComponents(nextProps.components, prevProps.components)) {\n            const components = createComponents(nextProps.components);\n            nextState = Object.assign(Object.assign({}, nextState), { components });\n        }\n        return nextState;\n    }\n    componentDidUpdate() {\n        const { columns, sortColumn, sortOrder } = this.state;\n        if (this.getSortOrderColumns(columns).length > 0) {\n            const sortState = this.getSortStateFromColumns(columns);\n            if (!isSameColumn(sortState.sortColumn, sortColumn) || sortState.sortOrder !== sortOrder) {\n                this.setState(sortState);\n            }\n        }\n    }\n    getDefaultSelection() {\n        const rowSelection = getRowSelection(this.props);\n        if (!rowSelection.getCheckboxProps) {\n            return [];\n        }\n        return this.getFlatData()\n            .filter((item, rowIndex) => this.getCheckboxPropsByItem(item, rowIndex).defaultChecked)\n            .map((record, rowIndex) => this.getRecordKey(record, rowIndex));\n    }\n    getDefaultPagination(props) {\n        const pagination = typeof props.pagination === 'object' ? props.pagination : {};\n        let current;\n        if ('current' in pagination) {\n            current = pagination.current;\n        }\n        else if ('defaultCurrent' in pagination) {\n            current = pagination.defaultCurrent;\n        }\n        let pageSize;\n        if ('pageSize' in pagination) {\n            pageSize = pagination.pageSize;\n        }\n        else if ('defaultPageSize' in pagination) {\n            pageSize = pagination.defaultPageSize;\n        }\n        return this.hasPagination(props)\n            ? Object.assign(Object.assign(Object.assign({}, defaultPagination), pagination), { current: current || 1, pageSize: pageSize || 10 }) : {};\n    }\n    getSortOrderColumns(columns) {\n        return flatFilter(columns || (this.state || {}).columns || [], (column) => 'sortOrder' in column);\n    }\n    getDefaultFilters(columns) {\n        const definedFilters = getFiltersFromColumns(this.state, columns);\n        const defaultFilteredValueColumns = flatFilter(columns || [], (column) => typeof column.defaultFilteredValue !== 'undefined');\n        const defaultFilters = defaultFilteredValueColumns.reduce((soFar, col) => {\n            const colKey = getColumnKey(col);\n            soFar[colKey] = col.defaultFilteredValue;\n            return soFar;\n        }, {});\n        return Object.assign(Object.assign({}, defaultFilters), definedFilters);\n    }\n    getDefaultSortOrder(columns) {\n        const definedSortState = this.getSortStateFromColumns(columns);\n        const defaultSortedColumn = flatFilter(columns || [], (column) => {\n            return column.defaultSortOrder != null;\n        })[0];\n        if (defaultSortedColumn && !definedSortState.sortColumn) {\n            return {\n                sortColumn: defaultSortedColumn,\n                sortOrder: defaultSortedColumn.defaultSortOrder,\n            };\n        }\n        return definedSortState;\n    }\n    getSortStateFromColumns(columns) {\n        // return first column which sortOrder is not falsy\n        const sortedColumn = this.getSortOrderColumns(columns).filter((col) => col.sortOrder)[0];\n        if (sortedColumn) {\n            return {\n                sortColumn: sortedColumn,\n                sortOrder: sortedColumn.sortOrder,\n            };\n        }\n        return {\n            sortColumn: null,\n            sortOrder: null,\n        };\n    }\n    getMaxCurrent(total) {\n        const { pagination: { current, pageSize }, } = this.state;\n        if ((current - 1) * pageSize >= total) {\n            return Math.floor((total - 1) / pageSize) + 1;\n        }\n        return current;\n    }\n    getSorterFn(state) {\n        const { sortOrder, sortColumn } = state || this.state;\n        if (!sortOrder || !sortColumn || typeof sortColumn.sorter !== 'function') {\n            return;\n        }\n        return (a, b) => {\n            const result = sortColumn.sorter(a, b, sortOrder);\n            if (result !== 0) {\n                return sortOrder === 'descend' ? -result : result;\n            }\n            return 0;\n        };\n    }\n    getCurrentPageData() {\n        let data = this.getLocalData();\n        let current;\n        let pageSize;\n        const state = this.state;\n        // 如果没有分页的话，默认全部展示\n        if (!this.hasPagination()) {\n            pageSize = Number.MAX_VALUE;\n            current = 1;\n        }\n        else {\n            pageSize = state.pagination.pageSize;\n            current = this.getMaxCurrent(state.pagination.total || data.length);\n        }\n        // 分页\n        // ---\n        // 当数据量少于等于每页数量时，直接设置数据\n        // 否则进行读取分页数据\n        if (data.length > pageSize || pageSize === Number.MAX_VALUE) {\n            data = data.slice((current - 1) * pageSize, current * pageSize);\n        }\n        return data;\n    }\n    getFlatData() {\n        const { childrenColumnName } = this.props;\n        return flatArray(this.getLocalData(null, false), childrenColumnName);\n    }\n    getFlatCurrentPageData() {\n        const { childrenColumnName } = this.props;\n        return flatArray(this.getCurrentPageData(), childrenColumnName);\n    }\n    getLocalData(state, filter = true) {\n        const currentState = state || this.state;\n        const { dataSource } = this.props;\n        let data = dataSource || [];\n        // 优化本地排序\n        data = data.slice(0);\n        const sorterFn = this.getSorterFn(currentState);\n        if (sorterFn) {\n            data = this.recursiveSort(data, sorterFn);\n        }\n        // 筛选\n        if (filter && currentState.filters) {\n            Object.keys(currentState.filters).forEach(columnKey => {\n                const col = this.findColumn(columnKey);\n                if (!col) {\n                    return;\n                }\n                const values = currentState.filters[columnKey] || [];\n                if (values.length === 0) {\n                    return;\n                }\n                const onFilter = col.onFilter;\n                data = onFilter\n                    ? data.filter(record => {\n                        return values.some(v => onFilter(v, record));\n                    })\n                    : data;\n            });\n        }\n        return data;\n    }\n    setSelectedRowKeys(selectedRowKeys, selectionInfo) {\n        const { selectWay, record, checked, changeRowKeys, nativeEvent } = selectionInfo;\n        const rowSelection = getRowSelection(this.props);\n        if (rowSelection && !('selectedRowKeys' in rowSelection)) {\n            this.props.store.setState({ selectedRowKeys });\n        }\n        const data = this.getFlatData();\n        if (!rowSelection.onChange && !rowSelection[selectWay]) {\n            return;\n        }\n        const selectedRows = data.filter((row, i) => selectedRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n        if (rowSelection.onChange) {\n            rowSelection.onChange(selectedRowKeys, selectedRows);\n        }\n        if (selectWay === 'onSelect' && rowSelection.onSelect) {\n            rowSelection.onSelect(record, checked, selectedRows, nativeEvent);\n        }\n        else if (selectWay === 'onSelectMultiple' && rowSelection.onSelectMultiple) {\n            const changeRows = data.filter((row, i) => changeRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n            rowSelection.onSelectMultiple(checked, selectedRows, changeRows);\n        }\n        else if (selectWay === 'onSelectAll' && rowSelection.onSelectAll) {\n            const changeRows = data.filter((row, i) => changeRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n            rowSelection.onSelectAll(checked, selectedRows, changeRows);\n        }\n        else if (selectWay === 'onSelectInvert' && rowSelection.onSelectInvert) {\n            rowSelection.onSelectInvert(selectedRowKeys);\n        }\n    }\n    toggleSortOrder(column) {\n        const pagination = Object.assign({}, this.state.pagination);\n        const sortDirections = column.sortDirections || this.props.sortDirections;\n        const { sortOrder, sortColumn } = this.state;\n        // 只同时允许一列进行排序，否则会导致排序顺序的逻辑问题\n        let newSortOrder;\n        // 切换另一列时，丢弃 sortOrder 的状态\n        if (isSameColumn(sortColumn, column) && sortOrder !== undefined) {\n            // 按照sortDirections的内容依次切换排序状态\n            const methodIndex = sortDirections.indexOf(sortOrder) + 1;\n            newSortOrder =\n                methodIndex === sortDirections.length ? undefined : sortDirections[methodIndex];\n        }\n        else {\n            newSortOrder = sortDirections[0];\n        }\n        if (this.props.pagination) {\n            // Reset current prop\n            pagination.current = 1;\n            pagination.onChange(pagination.current);\n        }\n        const newState = {\n            pagination,\n            sortOrder: newSortOrder,\n            sortColumn: newSortOrder ? column : null,\n        };\n        // Controlled\n        if (this.getSortOrderColumns().length === 0) {\n            this.setState(newState, this.scrollToFirstRow);\n        }\n        const { onChange } = this.props;\n        if (onChange) {\n            onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), newState), column));\n        }\n    }\n    hasPagination(props) {\n        return (props || this.props).pagination !== false;\n    }\n    isSortColumn(column) {\n        const { sortColumn } = this.state;\n        if (!column || !sortColumn) {\n            return false;\n        }\n        return getColumnKey(sortColumn) === getColumnKey(column);\n    }\n    // Get pagination, filters, sorter\n    prepareParamsArguments(state, column) {\n        const pagination = Object.assign({}, state.pagination);\n        // remove useless handle function in Table.onChange\n        delete pagination.onChange;\n        delete pagination.onShowSizeChange;\n        const filters = state.filters;\n        const sorter = {};\n        let currentColumn = column;\n        if (state.sortColumn && state.sortOrder) {\n            currentColumn = state.sortColumn;\n            sorter.column = state.sortColumn;\n            sorter.order = state.sortOrder;\n        }\n        if (currentColumn) {\n            sorter.field = currentColumn.dataIndex;\n            sorter.columnKey = getColumnKey(currentColumn);\n        }\n        const extra = {\n            currentDataSource: this.getLocalData(state),\n        };\n        return [pagination, filters, sorter, extra];\n    }\n    findColumn(myKey) {\n        let column;\n        treeMap(this.state.columns, c => {\n            if (getColumnKey(c) === myKey) {\n                column = c;\n            }\n        });\n        return column;\n    }\n    recursiveSort(data, sorterFn) {\n        const { childrenColumnName = 'children' } = this.props;\n        return data.sort(sorterFn).map((item) => item[childrenColumnName]\n            ? Object.assign(Object.assign({}, item), { [childrenColumnName]: this.recursiveSort(item[childrenColumnName], sorterFn) }) : item);\n    }\n    renderPagination(prefixCls, paginationPosition) {\n        // 强制不需要分页\n        if (!this.hasPagination()) {\n            return null;\n        }\n        let size = 'default';\n        const { pagination } = this.state;\n        if (pagination.size) {\n            size = pagination.size;\n        }\n        else if (this.props.size === 'middle' || this.props.size === 'small') {\n            size = 'small';\n        }\n        const position = pagination.position || 'bottom';\n        const total = pagination.total || this.getLocalData().length;\n        return total > 0 && (position === paginationPosition || position === 'both') ? (<Pagination key={`pagination-${paginationPosition}`} {...pagination} className={classNames(pagination.className, `${prefixCls}-pagination`)} onChange={this.handlePageChange} total={total} size={size} current={this.getMaxCurrent(total)} onShowSizeChange={this.handleShowSizeChange}/>) : null;\n    }\n    renderRowSelection({ prefixCls, locale, getPopupContainer, }) {\n        const { rowSelection } = this.props;\n        const columns = this.state.columns.concat();\n        if (rowSelection) {\n            const data = this.getFlatCurrentPageData().filter((item, index) => {\n                if (rowSelection.getCheckboxProps) {\n                    return !this.getCheckboxPropsByItem(item, index).disabled;\n                }\n                return true;\n            });\n            const selectionColumnClass = classNames(`${prefixCls}-selection-column`, {\n                [`${prefixCls}-selection-column-custom`]: rowSelection.selections,\n            });\n            const selectionColumn = {\n                key: 'selection-column',\n                render: this.renderSelectionBox(rowSelection.type),\n                className: selectionColumnClass,\n                fixed: rowSelection.fixed,\n                width: rowSelection.columnWidth,\n                title: rowSelection.columnTitle,\n                [INTERNAL_COL_DEFINE]: {\n                    className: `${prefixCls}-selection-col`,\n                },\n            };\n            if (rowSelection.type !== 'radio') {\n                const checkboxAllDisabled = data.every((item, index) => this.getCheckboxPropsByItem(item, index).disabled);\n                selectionColumn.title = selectionColumn.title || (<SelectionCheckboxAll store={this.props.store} locale={locale} data={data} getCheckboxPropsByItem={this.getCheckboxPropsByItem} getRecordKey={this.getRecordKey} disabled={checkboxAllDisabled} prefixCls={prefixCls} onSelect={this.handleSelectRow} selections={rowSelection.selections} hideDefaultSelections={rowSelection.hideDefaultSelections} getPopupContainer={this.generatePopupContainerFunc(getPopupContainer)}/>);\n            }\n            if ('fixed' in rowSelection) {\n                selectionColumn.fixed = rowSelection.fixed;\n            }\n            else if (columns.some(column => column.fixed === 'left' || column.fixed === true)) {\n                selectionColumn.fixed = 'left';\n            }\n            if (columns[0] && columns[0].key === 'selection-column') {\n                columns[0] = selectionColumn;\n            }\n            else {\n                columns.unshift(selectionColumn);\n            }\n        }\n        return columns;\n    }\n    renderColumnsDropdown({ prefixCls, dropdownPrefixCls, columns, locale, getPopupContainer, }) {\n        const { sortOrder, filters } = this.state;\n        return treeMap(columns, (column, i) => {\n            const key = getColumnKey(column, i);\n            let filterDropdown;\n            let sortButton;\n            let onHeaderCell = column.onHeaderCell;\n            const isSortColumn = this.isSortColumn(column);\n            if ((column.filters && column.filters.length > 0) || column.filterDropdown) {\n                const colFilters = key in filters ? filters[key] : [];\n                filterDropdown = (<FilterDropdown locale={locale} column={column} selectedKeys={colFilters} confirmFilter={this.handleFilter} prefixCls={`${prefixCls}-filter`} dropdownPrefixCls={dropdownPrefixCls || 'ant-dropdown'} getPopupContainer={this.generatePopupContainerFunc(getPopupContainer)} key=\"filter-dropdown\"/>);\n            }\n            if (column.sorter) {\n                const sortDirections = column.sortDirections || this.props.sortDirections;\n                const isAscend = isSortColumn && sortOrder === 'ascend';\n                const isDescend = isSortColumn && sortOrder === 'descend';\n                const ascend = sortDirections.indexOf('ascend') !== -1 && (<Icon className={`${prefixCls}-column-sorter-up ${isAscend ? 'on' : 'off'}`} type=\"caret-up\" theme=\"filled\"/>);\n                const descend = sortDirections.indexOf('descend') !== -1 && (<Icon className={`${prefixCls}-column-sorter-down ${isDescend ? 'on' : 'off'}`} type=\"caret-down\" theme=\"filled\"/>);\n                sortButton = (<div title={locale.sortTitle} className={classNames(`${prefixCls}-column-sorter-inner`, ascend && descend && `${prefixCls}-column-sorter-inner-full`)} key=\"sorter\">\n            {ascend}\n            {descend}\n          </div>);\n                onHeaderCell = (col) => {\n                    let colProps = {};\n                    // Get original first\n                    if (column.onHeaderCell) {\n                        colProps = Object.assign({}, column.onHeaderCell(col));\n                    }\n                    // Add sorter logic\n                    const onHeaderCellClick = colProps.onClick;\n                    colProps.onClick = (...args) => {\n                        this.toggleSortOrder(column);\n                        if (onHeaderCellClick) {\n                            onHeaderCellClick(...args);\n                        }\n                    };\n                    return colProps;\n                };\n            }\n            return Object.assign(Object.assign({}, column), { className: classNames(column.className, {\n                    [`${prefixCls}-column-has-actions`]: sortButton || filterDropdown,\n                    [`${prefixCls}-column-has-filters`]: filterDropdown,\n                    [`${prefixCls}-column-has-sorters`]: sortButton,\n                    [`${prefixCls}-column-sort`]: isSortColumn && sortOrder,\n                }), title: [\n                    <span key=\"title\" className={`${prefixCls}-header-column`}>\n            <div className={sortButton ? `${prefixCls}-column-sorters` : undefined}>\n              <span className={`${prefixCls}-column-title`}>\n                {this.renderColumnTitle(column.title)}\n              </span>\n              <span className={`${prefixCls}-column-sorter`}>{sortButton}</span>\n            </div>\n          </span>,\n                    filterDropdown,\n                ], onHeaderCell });\n        });\n    }\n    renderColumnTitle(title) {\n        const { filters, sortOrder, sortColumn } = this.state;\n        // https://github.com/ant-design/ant-design/issues/11246#issuecomment-405009167\n        if (title instanceof Function) {\n            return title({\n                filters,\n                sortOrder,\n                sortColumn,\n            });\n        }\n        return title;\n    }\n    render() {\n        return <ConfigConsumer>{this.renderComponent}</ConfigConsumer>;\n    }\n}\nTable.propTypes = {\n    dataSource: PropTypes.array,\n    columns: PropTypes.array,\n    prefixCls: PropTypes.string,\n    useFixedHeader: PropTypes.bool,\n    rowSelection: PropTypes.object,\n    className: PropTypes.string,\n    size: PropTypes.string,\n    loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    bordered: PropTypes.bool,\n    onChange: PropTypes.func,\n    locale: PropTypes.object,\n    dropdownPrefixCls: PropTypes.string,\n    sortDirections: PropTypes.array,\n    getPopupContainer: PropTypes.func,\n};\nTable.defaultProps = {\n    dataSource: [],\n    useFixedHeader: false,\n    className: '',\n    size: 'default',\n    loading: false,\n    bordered: false,\n    indentSize: 20,\n    locale: {},\n    rowKey: 'key',\n    showHeader: true,\n    sortDirections: ['ascend', 'descend'],\n    childrenColumnName: 'children',\n};\npolyfill(Table);\nclass StoreTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.setCheckboxPropsCache = (cache) => (this.CheckboxPropsCache = cache);\n        this.CheckboxPropsCache = {};\n        this.store = createStore({\n            selectedRowKeys: getRowSelection(props).selectedRowKeys || [],\n            selectionDirty: false,\n        });\n    }\n    render() {\n        return (<Table {...this.props} store={this.store} checkboxPropsCache={this.CheckboxPropsCache} setCheckboxPropsCache={this.setCheckboxPropsCache}/>);\n    }\n}\nStoreTable.displayName = 'withStore(Table)';\nStoreTable.Column = Column;\nStoreTable.ColumnGroup = ColumnGroup;\nexport default StoreTable;\n"],"file":"Table.js"}