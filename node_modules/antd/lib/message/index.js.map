{"version":3,"sources":["message/index.jsx"],"names":["defaultDuration","defaultTop","messageInstance","key","prefixCls","transitionName","getContainer","maxCount","getMessageInstance","callback","Notification","newInstance","style","top","instance","notice","args","duration","undefined","iconType","info","success","error","warning","loading","type","target","closePromise","Promise","resolve","onClose","iconNode","switchIconNode","content","icon","result","removeNotice","then","filled","rejected","promise","isArgsProps","api","open","config","options","destroy","forEach","warn"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Notification from 'rc-notification';\nimport Icon from '../icon';\nlet defaultDuration = 3;\nlet defaultTop;\nlet messageInstance;\nlet key = 1;\nlet prefixCls = 'ant-message';\nlet transitionName = 'move-up';\nlet getContainer;\nlet maxCount;\nfunction getMessageInstance(callback) {\n    if (messageInstance) {\n        callback(messageInstance);\n        return;\n    }\n    Notification.newInstance({\n        prefixCls,\n        transitionName,\n        style: { top: defaultTop },\n        getContainer,\n        maxCount,\n    }, (instance) => {\n        if (messageInstance) {\n            callback(messageInstance);\n            return;\n        }\n        messageInstance = instance;\n        callback(instance);\n    });\n}\nfunction notice(args) {\n    const duration = args.duration !== undefined ? args.duration : defaultDuration;\n    const iconType = {\n        info: 'info-circle',\n        success: 'check-circle',\n        error: 'close-circle',\n        warning: 'exclamation-circle',\n        loading: 'loading',\n    }[args.type];\n    const target = args.key || key++;\n    const closePromise = new Promise(resolve => {\n        const callback = () => {\n            if (typeof args.onClose === 'function') {\n                args.onClose();\n            }\n            return resolve(true);\n        };\n        getMessageInstance(instance => {\n            const iconNode = (<Icon type={iconType} theme={iconType === 'loading' ? 'outlined' : 'filled'}/>);\n            const switchIconNode = iconType ? iconNode : '';\n            instance.notice({\n                key: target,\n                duration,\n                style: {},\n                content: (<div className={`${prefixCls}-custom-content${args.type ? ` ${prefixCls}-${args.type}` : ''}`}>\n            {args.icon ? args.icon : switchIconNode}\n            <span>{args.content}</span>\n          </div>),\n                onClose: callback,\n            });\n        });\n    });\n    const result = () => {\n        if (messageInstance) {\n            messageInstance.removeNotice(target);\n        }\n    };\n    result.then = (filled, rejected) => closePromise.then(filled, rejected);\n    result.promise = closePromise;\n    return result;\n}\nfunction isArgsProps(content) {\n    return typeof content === 'object' && !!content.content;\n}\nconst api = {\n    open: notice,\n    config(options) {\n        if (options.top !== undefined) {\n            defaultTop = options.top;\n            messageInstance = null; // delete messageInstance for new defaultTop\n        }\n        if (options.duration !== undefined) {\n            defaultDuration = options.duration;\n        }\n        if (options.prefixCls !== undefined) {\n            prefixCls = options.prefixCls;\n        }\n        if (options.getContainer !== undefined) {\n            getContainer = options.getContainer;\n        }\n        if (options.transitionName !== undefined) {\n            transitionName = options.transitionName;\n            messageInstance = null; // delete messageInstance for new transitionName\n        }\n        if (options.maxCount !== undefined) {\n            maxCount = options.maxCount;\n            messageInstance = null;\n        }\n    },\n    destroy() {\n        if (messageInstance) {\n            messageInstance.destroy();\n            messageInstance = null;\n        }\n    },\n};\n['success', 'info', 'warning', 'error', 'loading'].forEach(type => {\n    api[type] = (content, duration, onClose) => {\n        if (isArgsProps(content)) {\n            return api.open(Object.assign(Object.assign({}, content), { type }));\n        }\n        if (typeof duration === 'function') {\n            onClose = duration;\n            duration = undefined;\n        }\n        return api.open({ content, duration, type, onClose });\n    };\n});\napi.warn = api.warning;\nexport default api;\n"],"file":"index.js"}