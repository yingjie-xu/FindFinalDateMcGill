{"version":3,"sources":["transfer/renderListBody.jsx"],"names":["OmitProps","ListBody","arguments","state","mounted","onItemSelect","item","props","selectedKeys","checked","indexOf","key","mountId","setState","prevProps","filteredRenderItems","lazy","length","container","raf","cancel","lazyId","scrollEvent","Event","bubbles","dispatchEvent","prefixCls","onScroll","globalDisabled","disabled","map","renderedEl","renderedText","React","Component","ListBodyWrapper"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { findDOMNode } from 'react-dom';\nimport Animate from 'rc-animate';\nimport raf from '../_util/raf';\nimport { tuple } from '../_util/type';\nimport ListItem from './ListItem';\nexport const OmitProps = tuple('handleFilter', 'handleSelect', 'handleSelectAll', 'handleClear', 'body', 'checkedKeys');\nclass ListBody extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            mounted: false,\n        };\n        this.onItemSelect = (item) => {\n            const { onItemSelect, selectedKeys } = this.props;\n            const checked = selectedKeys.indexOf(item.key) >= 0;\n            onItemSelect(item.key, !checked);\n        };\n    }\n    componentDidMount() {\n        this.mountId = raf(() => {\n            this.setState({ mounted: true });\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { filteredRenderItems, lazy } = this.props;\n        if (prevProps.filteredRenderItems.length !== filteredRenderItems.length && lazy !== false) {\n            // TODO: Replace this with ref when react 15 support removed.\n            const container = findDOMNode(this);\n            raf.cancel(this.lazyId);\n            this.lazyId = raf(() => {\n                if (container) {\n                    const scrollEvent = new Event('scroll', { bubbles: true });\n                    container.dispatchEvent(scrollEvent);\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        raf.cancel(this.mountId);\n        raf.cancel(this.lazyId);\n    }\n    render() {\n        const { mounted } = this.state;\n        const { prefixCls, onScroll, filteredRenderItems, lazy, selectedKeys, disabled: globalDisabled, } = this.props;\n        return (<Animate component=\"ul\" componentProps={{ onScroll }} className={`${prefixCls}-content`} transitionName={mounted ? `${prefixCls}-content-item-highlight` : ''} transitionLeave={false}>\n        {filteredRenderItems.map(({ renderedEl, renderedText, item }) => {\n            const { disabled } = item;\n            const checked = selectedKeys.indexOf(item.key) >= 0;\n            return (<ListItem disabled={globalDisabled || disabled} key={item.key} item={item} lazy={lazy} renderedText={renderedText} renderedEl={renderedEl} checked={checked} prefixCls={prefixCls} onClick={this.onItemSelect}/>);\n        })}\n      </Animate>);\n    }\n}\nconst ListBodyWrapper = (props) => <ListBody {...props}/>;\nexport default ListBodyWrapper;\n"],"file":"renderListBody.js"}