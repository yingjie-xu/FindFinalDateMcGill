{"version":3,"sources":["upload/Upload.jsx"],"names":["Upload","props","saveUpload","node","upload","onStart","file","fileList","state","targetItem","status","nextFileList","concat","fileIndex","uid","push","onChange","window","File","process","env","TEST_IE","autoUpdateProgress","onSuccess","response","xhr","clearProgressTimer","JSON","parse","e","onProgress","percent","event","onError","error","handleRemove","onRemove","Promise","resolve","then","ret","removedFileList","abort","info","setState","onFileDrop","dragState","type","beforeUpload","stateFileList","result","map","fileToObject","item","renderUploadList","locale","showUploadList","listType","onPreview","onDownload","previewFile","disabled","propLocale","showRemoveIcon","showPreviewIcon","showDownloadIcon","renderUpload","getPrefixCls","customizePrefixCls","prefixCls","className","children","style","rcUploadProps","uploadList","defaultLocale","dragCls","some","uploadButtonCls","id","uploadButton","undefined","display","defaultFileList","clearInterval","progressTimer","_","getPercent","curPercent","setInterval","nextProps","React","Component","defaultProps","multiple","action","data","accept","T","supportServerRender"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport RcUpload from 'rc-upload';\nimport classNames from 'classnames';\nimport uniqBy from 'lodash/uniqBy';\nimport findIndex from 'lodash/findIndex';\nimport UploadList from './UploadList';\nimport { T, fileToObject, genPercentAdd, getFileItem, removeFileItem } from './utils';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nclass Upload extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveUpload = (node) => {\n            this.upload = node;\n        };\n        this.onStart = (file) => {\n            const { fileList } = this.state;\n            const targetItem = fileToObject(file);\n            targetItem.status = 'uploading';\n            const nextFileList = fileList.concat();\n            const fileIndex = findIndex(nextFileList, ({ uid }) => uid === targetItem.uid);\n            if (fileIndex === -1) {\n                nextFileList.push(targetItem);\n            }\n            else {\n                nextFileList[fileIndex] = targetItem;\n            }\n            this.onChange({\n                file: targetItem,\n                fileList: nextFileList,\n            });\n            // fix ie progress\n            if (!window.File || process.env.TEST_IE) {\n                this.autoUpdateProgress(0, targetItem);\n            }\n        };\n        this.onSuccess = (response, file, xhr) => {\n            this.clearProgressTimer();\n            try {\n                if (typeof response === 'string') {\n                    response = JSON.parse(response);\n                }\n            }\n            catch (e) {\n                /* do nothing */\n            }\n            const { fileList } = this.state;\n            const targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.status = 'done';\n            targetItem.response = response;\n            targetItem.xhr = xhr;\n            this.onChange({\n                file: Object.assign({}, targetItem),\n                fileList,\n            });\n        };\n        this.onProgress = (e, file) => {\n            const { fileList } = this.state;\n            const targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.percent = e.percent;\n            this.onChange({\n                event: e,\n                file: Object.assign({}, targetItem),\n                fileList,\n            });\n        };\n        this.onError = (error, response, file) => {\n            this.clearProgressTimer();\n            const { fileList } = this.state;\n            const targetItem = getFileItem(file, fileList);\n            // removed\n            if (!targetItem) {\n                return;\n            }\n            targetItem.error = error;\n            targetItem.response = response;\n            targetItem.status = 'error';\n            this.onChange({\n                file: Object.assign({}, targetItem),\n                fileList,\n            });\n        };\n        this.handleRemove = (file) => {\n            const { onRemove } = this.props;\n            const { fileList } = this.state;\n            Promise.resolve(typeof onRemove === 'function' ? onRemove(file) : onRemove).then(ret => {\n                // Prevent removing file\n                if (ret === false) {\n                    return;\n                }\n                const removedFileList = removeFileItem(file, fileList);\n                if (removedFileList) {\n                    file.status = 'removed'; // eslint-disable-line\n                    if (this.upload) {\n                        this.upload.abort(file);\n                    }\n                    this.onChange({\n                        file,\n                        fileList: removedFileList,\n                    });\n                }\n            });\n        };\n        this.onChange = (info) => {\n            if (!('fileList' in this.props)) {\n                this.setState({ fileList: info.fileList });\n            }\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange(info);\n            }\n        };\n        this.onFileDrop = (e) => {\n            this.setState({\n                dragState: e.type,\n            });\n        };\n        this.beforeUpload = (file, fileList) => {\n            const { beforeUpload } = this.props;\n            const { fileList: stateFileList } = this.state;\n            if (!beforeUpload) {\n                return true;\n            }\n            const result = beforeUpload(file, fileList);\n            if (result === false) {\n                this.onChange({\n                    file,\n                    fileList: uniqBy(stateFileList.concat(fileList.map(fileToObject)), (item) => item.uid),\n                });\n                return false;\n            }\n            if (result && result.then) {\n                return result;\n            }\n            return true;\n        };\n        this.renderUploadList = (locale) => {\n            const { showUploadList, listType, onPreview, onDownload, previewFile, disabled, locale: propLocale, } = this.props;\n            const { showRemoveIcon, showPreviewIcon, showDownloadIcon } = showUploadList;\n            const { fileList } = this.state;\n            return (<UploadList listType={listType} items={fileList} previewFile={previewFile} onPreview={onPreview} onDownload={onDownload} onRemove={this.handleRemove} showRemoveIcon={!disabled && showRemoveIcon} showPreviewIcon={showPreviewIcon} showDownloadIcon={showDownloadIcon} locale={Object.assign(Object.assign({}, locale), propLocale)}/>);\n        };\n        this.renderUpload = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls, className, showUploadList, listType, type, disabled, children, style, } = this.props;\n            const { fileList, dragState } = this.state;\n            const prefixCls = getPrefixCls('upload', customizePrefixCls);\n            const rcUploadProps = Object.assign(Object.assign({ onStart: this.onStart, onError: this.onError, onProgress: this.onProgress, onSuccess: this.onSuccess }, this.props), { prefixCls, beforeUpload: this.beforeUpload });\n            delete rcUploadProps.className;\n            delete rcUploadProps.style;\n            const uploadList = showUploadList ? (<LocaleReceiver componentName=\"Upload\" defaultLocale={defaultLocale.Upload}>\n        {this.renderUploadList}\n      </LocaleReceiver>) : null;\n            if (type === 'drag') {\n                const dragCls = classNames(prefixCls, {\n                    [`${prefixCls}-drag`]: true,\n                    [`${prefixCls}-drag-uploading`]: fileList.some(file => file.status === 'uploading'),\n                    [`${prefixCls}-drag-hover`]: dragState === 'dragover',\n                    [`${prefixCls}-disabled`]: disabled,\n                }, className);\n                return (<span>\n          <div className={dragCls} onDrop={this.onFileDrop} onDragOver={this.onFileDrop} onDragLeave={this.onFileDrop} style={style}>\n            <RcUpload {...rcUploadProps} ref={this.saveUpload} className={`${prefixCls}-btn`}>\n              <div className={`${prefixCls}-drag-container`}>{children}</div>\n            </RcUpload>\n          </div>\n          {uploadList}\n        </span>);\n            }\n            const uploadButtonCls = classNames(prefixCls, {\n                [`${prefixCls}-select`]: true,\n                [`${prefixCls}-select-${listType}`]: true,\n                [`${prefixCls}-disabled`]: disabled,\n            });\n            // Remove id to avoid open by label when trigger is hidden\n            // https://github.com/ant-design/ant-design/issues/14298\n            // https://github.com/ant-design/ant-design/issues/16478\n            if (!children || disabled) {\n                delete rcUploadProps.id;\n            }\n            const uploadButton = (<div className={uploadButtonCls} style={children ? undefined : { display: 'none' }}>\n        <RcUpload {...rcUploadProps} ref={this.saveUpload}/>\n      </div>);\n            if (listType === 'picture-card') {\n                return (<span className={classNames(className, `${prefixCls}-picture-card-wrapper`)}>\n          {uploadList}\n          {uploadButton}\n        </span>);\n            }\n            return (<span className={className}>\n        {uploadButton}\n        {uploadList}\n      </span>);\n        };\n        this.state = {\n            fileList: props.fileList || props.defaultFileList || [],\n            dragState: 'drop',\n        };\n        warning('fileList' in props || !('value' in props), 'Upload', '`value` is not validate prop, do you mean `fileList`?');\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('fileList' in nextProps) {\n            return {\n                fileList: nextProps.fileList || [],\n            };\n        }\n        return null;\n    }\n    componentWillUnmount() {\n        this.clearProgressTimer();\n    }\n    clearProgressTimer() {\n        clearInterval(this.progressTimer);\n    }\n    autoUpdateProgress(_, file) {\n        const getPercent = genPercentAdd();\n        let curPercent = 0;\n        this.clearProgressTimer();\n        this.progressTimer = setInterval(() => {\n            curPercent = getPercent(curPercent);\n            this.onProgress({\n                percent: curPercent * 100,\n            }, file);\n        }, 200);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderUpload}</ConfigConsumer>;\n    }\n}\nUpload.defaultProps = {\n    type: 'select',\n    multiple: false,\n    action: '',\n    data: {},\n    accept: '',\n    beforeUpload: T,\n    showUploadList: true,\n    listType: 'text',\n    className: '',\n    disabled: false,\n    supportServerRender: true,\n};\npolyfill(Upload);\nexport default Upload;\n"],"file":"Upload.js"}