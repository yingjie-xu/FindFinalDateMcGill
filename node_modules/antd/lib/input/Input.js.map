{"version":3,"sources":["input/Input.jsx"],"names":["InputSizes","fixControlledValue","value","resolveOnChange","target","e","onChange","event","type","Object","create","currentTarget","originalInputValue","getInputClassName","prefixCls","size","disabled","Input","props","saveClearableInput","input","clearableInput","saveInput","handleReset","setValue","focus","renderInput","className","addonBefore","addonAfter","otherProps","handleChange","handleKeyDown","onPressEnter","onKeyDown","keyCode","renderComponent","getPrefixCls","state","customizePrefixCls","defaultValue","prevProps","document","activeElement","blur","select","callback","setState","nextProps","React","Component","defaultProps","propTypes","PropTypes","string","id","oneOf","maxLength","number","bool","any","node","func","onKeyUp","onFocus","onBlur","prefix","suffix","allowClear"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport { polyfill } from 'react-lifecycles-compat';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport { tuple } from '../_util/type';\nimport ClearableLabeledInput, { hasPrefixSuffix } from './ClearableLabeledInput';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nexport const InputSizes = tuple('small', 'default', 'large');\nexport function fixControlledValue(value) {\n    if (typeof value === 'undefined' || value === null) {\n        return '';\n    }\n    return value;\n}\nexport function resolveOnChange(target, e, onChange) {\n    if (onChange) {\n        let event = e;\n        if (e.type === 'click') {\n            // click clear icon\n            event = Object.create(e);\n            event.target = target;\n            event.currentTarget = target;\n            const originalInputValue = target.value;\n            // change target ref value cause e.target.value should be '' when clear input\n            target.value = '';\n            onChange(event);\n            // reset target ref value\n            target.value = originalInputValue;\n            return;\n        }\n        onChange(event);\n    }\n}\nexport function getInputClassName(prefixCls, size, disabled) {\n    return classNames(prefixCls, {\n        [`${prefixCls}-sm`]: size === 'small',\n        [`${prefixCls}-lg`]: size === 'large',\n        [`${prefixCls}-disabled`]: disabled,\n    });\n}\nclass Input extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveClearableInput = (input) => {\n            this.clearableInput = input;\n        };\n        this.saveInput = (input) => {\n            this.input = input;\n        };\n        this.handleReset = (e) => {\n            this.setValue('', () => {\n                this.focus();\n            });\n            resolveOnChange(this.input, e, this.props.onChange);\n        };\n        this.renderInput = (prefixCls) => {\n            const { className, addonBefore, addonAfter, size, disabled } = this.props;\n            // Fix https://fb.me/react-unknown-prop\n            const otherProps = omit(this.props, [\n                'prefixCls',\n                'onPressEnter',\n                'addonBefore',\n                'addonAfter',\n                'prefix',\n                'suffix',\n                'allowClear',\n                // Input elements must be either controlled or uncontrolled,\n                // specify either the value prop, or the defaultValue prop, but not both.\n                'defaultValue',\n                'size',\n                'inputType',\n            ]);\n            return (<input {...otherProps} onChange={this.handleChange} onKeyDown={this.handleKeyDown} className={classNames(getInputClassName(prefixCls, size, disabled), {\n                [className]: className && !addonBefore && !addonAfter,\n            })} ref={this.saveInput}/>);\n        };\n        this.handleChange = (e) => {\n            this.setValue(e.target.value);\n            resolveOnChange(this.input, e, this.props.onChange);\n        };\n        this.handleKeyDown = (e) => {\n            const { onPressEnter, onKeyDown } = this.props;\n            if (e.keyCode === 13 && onPressEnter) {\n                onPressEnter(e);\n            }\n            if (onKeyDown) {\n                onKeyDown(e);\n            }\n        };\n        this.renderComponent = ({ getPrefixCls }) => {\n            const { value } = this.state;\n            const { prefixCls: customizePrefixCls } = this.props;\n            const prefixCls = getPrefixCls('input', customizePrefixCls);\n            return (<ClearableLabeledInput {...this.props} prefixCls={prefixCls} inputType=\"input\" value={fixControlledValue(value)} element={this.renderInput(prefixCls)} handleReset={this.handleReset} ref={this.saveClearableInput}/>);\n        };\n        const value = typeof props.value === 'undefined' ? props.defaultValue : props.value;\n        this.state = {\n            value,\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('value' in nextProps) {\n            return {\n                value: nextProps.value,\n            };\n        }\n        return null;\n    }\n    // Since polyfill `getSnapshotBeforeUpdate` need work with `componentDidUpdate`.\n    // We keep an empty function here.\n    componentDidUpdate() { }\n    getSnapshotBeforeUpdate(prevProps) {\n        if (hasPrefixSuffix(prevProps) !== hasPrefixSuffix(this.props)) {\n            warning(this.input !== document.activeElement, 'Input', `When Input is focused, dynamic add or remove prefix / suffix will make it lose focus caused by dom structure change. Read more: https://ant.design/components/input/#FAQ`);\n        }\n        return null;\n    }\n    focus() {\n        this.input.focus();\n    }\n    blur() {\n        this.input.blur();\n    }\n    select() {\n        this.input.select();\n    }\n    setValue(value, callback) {\n        if (!('value' in this.props)) {\n            this.setState({ value }, callback);\n        }\n    }\n    render() {\n        return <ConfigConsumer>{this.renderComponent}</ConfigConsumer>;\n    }\n}\nInput.defaultProps = {\n    type: 'text',\n};\nInput.propTypes = {\n    type: PropTypes.string,\n    id: PropTypes.string,\n    size: PropTypes.oneOf(InputSizes),\n    maxLength: PropTypes.number,\n    disabled: PropTypes.bool,\n    value: PropTypes.any,\n    defaultValue: PropTypes.any,\n    className: PropTypes.string,\n    addonBefore: PropTypes.node,\n    addonAfter: PropTypes.node,\n    prefixCls: PropTypes.string,\n    onPressEnter: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onKeyUp: PropTypes.func,\n    onFocus: PropTypes.func,\n    onBlur: PropTypes.func,\n    prefix: PropTypes.node,\n    suffix: PropTypes.node,\n    allowClear: PropTypes.bool,\n};\npolyfill(Input);\nexport default Input;\n"],"file":"Input.js"}