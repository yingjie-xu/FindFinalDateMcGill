{"version":3,"sources":["input/ResizableTextArea.jsx"],"names":["ResizableTextArea","props","saveTextArea","textArea","resizeOnNextFrame","raf","cancel","nextFrameActionId","resizeTextarea","autoSize","autosize","minRows","maxRows","textareaStyles","setState","resizing","resizeFrameId","renderTextArea","prefixCls","className","disabled","state","undefined","otherProps","cls","value","style","overflow","prevProps","React","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { polyfill } from 'react-lifecycles-compat';\nimport ResizeObserver from 'rc-resize-observer';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport calculateNodeHeight from './calculateNodeHeight';\nimport raf from '../_util/raf';\nimport warning from '../_util/warning';\nclass ResizableTextArea extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveTextArea = (textArea) => {\n            this.textArea = textArea;\n        };\n        this.resizeOnNextFrame = () => {\n            raf.cancel(this.nextFrameActionId);\n            this.nextFrameActionId = raf(this.resizeTextarea);\n        };\n        this.resizeTextarea = () => {\n            const autoSize = this.props.autoSize || this.props.autosize;\n            if (!autoSize || !this.textArea) {\n                return;\n            }\n            const { minRows, maxRows } = autoSize;\n            const textareaStyles = calculateNodeHeight(this.textArea, false, minRows, maxRows);\n            this.setState({ textareaStyles, resizing: true }, () => {\n                raf.cancel(this.resizeFrameId);\n                this.resizeFrameId = raf(() => {\n                    this.setState({ resizing: false });\n                });\n            });\n        };\n        this.renderTextArea = () => {\n            const { prefixCls, autoSize, autosize, className, disabled } = this.props;\n            const { textareaStyles, resizing } = this.state;\n            warning(autosize === undefined, 'Input.TextArea', 'autosize is deprecated, please use autoSize instead.');\n            const otherProps = omit(this.props, [\n                'prefixCls',\n                'onPressEnter',\n                'autoSize',\n                'autosize',\n                'defaultValue',\n                'allowClear',\n            ]);\n            const cls = classNames(prefixCls, className, {\n                [`${prefixCls}-disabled`]: disabled,\n            });\n            // Fix https://github.com/ant-design/ant-design/issues/6776\n            // Make sure it could be reset when using form.getFieldDecorator\n            if ('value' in otherProps) {\n                otherProps.value = otherProps.value || '';\n            }\n            const style = Object.assign(Object.assign(Object.assign({}, this.props.style), textareaStyles), (resizing ? { overflow: 'hidden' } : null));\n            return (<ResizeObserver onResize={this.resizeOnNextFrame} disabled={!(autoSize || autosize)}>\n        <textarea {...otherProps} className={cls} style={style} ref={this.saveTextArea}/>\n      </ResizeObserver>);\n        };\n        this.state = {\n            textareaStyles: {},\n            resizing: false,\n        };\n    }\n    componentDidMount() {\n        this.resizeTextarea();\n    }\n    componentDidUpdate(prevProps) {\n        // Re-render with the new content then recalculate the height as required.\n        if (prevProps.value !== this.props.value) {\n            this.resizeTextarea();\n        }\n    }\n    componentWillUnmount() {\n        raf.cancel(this.nextFrameActionId);\n        raf.cancel(this.resizeFrameId);\n    }\n    render() {\n        return this.renderTextArea();\n    }\n}\npolyfill(ResizableTextArea);\nexport default ResizableTextArea;\n"],"file":"ResizableTextArea.js"}