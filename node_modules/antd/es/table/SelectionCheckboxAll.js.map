{"version":3,"sources":["table/SelectionCheckboxAll.jsx"],"names":["React","classNames","polyfill","Checkbox","Dropdown","Menu","Icon","checkSelection","store","getCheckboxPropsByItem","getRecordKey","data","type","byDefaultChecked","item","i","defaultChecked","getState","selectedRowKeys","indexOf","getIndeterminateState","props","length","someCheckedNotByDefaultChecked","someCheckedByDefaultChecked","selectionDirty","getCheckState","SelectionCheckboxAll","state","checked","indeterminate","handleSelectAllChange","e","target","onSelect","defaultSelections","hideDefaultSelections","key","text","locale","selectAll","selectInvert","subscribe","unsubscribe","setState","prevState","newState","setCheckState","selections","map","selection","index","disabled","prefixCls","getPopupContainer","selectionPrefixCls","customSelections","newSelections","Array","isArray","concat","menu","renderMenus","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Checkbox from '../checkbox';\nimport Dropdown from '../dropdown';\nimport Menu from '../menu';\nimport Icon from '../icon';\nfunction checkSelection({ store, getCheckboxPropsByItem, getRecordKey, data, type, byDefaultChecked, }) {\n    return byDefaultChecked\n        ? data[type]((item, i) => getCheckboxPropsByItem(item, i).defaultChecked)\n        : data[type]((item, i) => store.getState().selectedRowKeys.indexOf(getRecordKey(item, i)) >= 0);\n}\nfunction getIndeterminateState(props) {\n    const { store, data } = props;\n    if (!data.length) {\n        return false;\n    }\n    const someCheckedNotByDefaultChecked = checkSelection(Object.assign(Object.assign({}, props), { data, type: 'some', byDefaultChecked: false })) &&\n        !checkSelection(Object.assign(Object.assign({}, props), { data, type: 'every', byDefaultChecked: false }));\n    const someCheckedByDefaultChecked = checkSelection(Object.assign(Object.assign({}, props), { data, type: 'some', byDefaultChecked: true })) &&\n        !checkSelection(Object.assign(Object.assign({}, props), { data, type: 'every', byDefaultChecked: true }));\n    if (store.getState().selectionDirty) {\n        return someCheckedNotByDefaultChecked;\n    }\n    return someCheckedNotByDefaultChecked || someCheckedByDefaultChecked;\n}\nfunction getCheckState(props) {\n    const { store, data } = props;\n    if (!data.length) {\n        return false;\n    }\n    if (store.getState().selectionDirty) {\n        return checkSelection(Object.assign(Object.assign({}, props), { data, type: 'every', byDefaultChecked: false }));\n    }\n    return (checkSelection(Object.assign(Object.assign({}, props), { data, type: 'every', byDefaultChecked: false })) ||\n        checkSelection(Object.assign(Object.assign({}, props), { data, type: 'every', byDefaultChecked: true })));\n}\nclass SelectionCheckboxAll extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            checked: false,\n            indeterminate: false,\n        };\n        this.handleSelectAllChange = (e) => {\n            const { checked } = e.target;\n            this.props.onSelect(checked ? 'all' : 'removeAll', 0, null);\n        };\n        this.defaultSelections = props.hideDefaultSelections\n            ? []\n            : [\n                {\n                    key: 'all',\n                    text: props.locale.selectAll,\n                },\n                {\n                    key: 'invert',\n                    text: props.locale.selectInvert,\n                },\n            ];\n    }\n    static getDerivedStateFromProps(props, state) {\n        const checked = getCheckState(props);\n        const indeterminate = getIndeterminateState(props);\n        const newState = {};\n        if (indeterminate !== state.indeterminate) {\n            newState.indeterminate = indeterminate;\n        }\n        if (checked !== state.checked) {\n            newState.checked = checked;\n        }\n        return newState;\n    }\n    componentDidMount() {\n        this.subscribe();\n    }\n    componentWillUnmount() {\n        if (this.unsubscribe) {\n            this.unsubscribe();\n        }\n    }\n    setCheckState(props) {\n        const checked = getCheckState(props);\n        const indeterminate = getIndeterminateState(props);\n        this.setState(prevState => {\n            const newState = {};\n            if (indeterminate !== prevState.indeterminate) {\n                newState.indeterminate = indeterminate;\n            }\n            if (checked !== prevState.checked) {\n                newState.checked = checked;\n            }\n            return newState;\n        });\n    }\n    subscribe() {\n        const { store } = this.props;\n        this.unsubscribe = store.subscribe(() => {\n            this.setCheckState(this.props);\n        });\n    }\n    renderMenus(selections) {\n        return selections.map((selection, index) => {\n            return (<Menu.Item key={selection.key || index}>\n          <div onClick={() => {\n                this.props.onSelect(selection.key, index, selection.onSelect);\n            }}>\n            {selection.text}\n          </div>\n        </Menu.Item>);\n        });\n    }\n    render() {\n        const { disabled, prefixCls, selections, getPopupContainer } = this.props;\n        const { checked, indeterminate } = this.state;\n        const selectionPrefixCls = `${prefixCls}-selection`;\n        let customSelections = null;\n        if (selections) {\n            const newSelections = Array.isArray(selections)\n                ? this.defaultSelections.concat(selections)\n                : this.defaultSelections;\n            const menu = (<Menu className={`${selectionPrefixCls}-menu`} selectedKeys={[]}>\n          {this.renderMenus(newSelections)}\n        </Menu>);\n            customSelections =\n                newSelections.length > 0 ? (<Dropdown overlay={menu} getPopupContainer={getPopupContainer}>\n            <div className={`${selectionPrefixCls}-down`}>\n              <Icon type=\"down\"/>\n            </div>\n          </Dropdown>) : null;\n        }\n        return (<div className={selectionPrefixCls}>\n        <Checkbox className={classNames({ [`${selectionPrefixCls}-select-all-custom`]: customSelections })} checked={checked} indeterminate={indeterminate} disabled={disabled} onChange={this.handleSelectAllChange}/>\n        {customSelections}\n      </div>);\n    }\n}\npolyfill(SelectionCheckboxAll);\nexport default SelectionCheckboxAll;\n"],"file":"SelectionCheckboxAll.js"}