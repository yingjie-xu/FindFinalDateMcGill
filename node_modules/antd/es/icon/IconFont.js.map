{"version":3,"sources":["icon/IconFont.jsx"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","Icon","customCache","Set","create","options","scriptUrl","extraCommonProps","document","window","createElement","has","script","setAttribute","add","body","appendChild","Iconfont","props","type","children","restProps","content","displayName"],"mappings":";;AAAA,IAAIA,MAAM,GAAI,QAAQ,KAAKA,MAAd,IAAyB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAClD,MAAIC,CAAC,GAAG,EAAR;;AACA,OAAK,IAAIC,CAAT,IAAcH,CAAd;AAAiB,QAAII,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCP,CAArC,EAAwCG,CAAxC,KAA8CF,CAAC,CAACO,OAAF,CAAUL,CAAV,IAAe,CAAjE,EACbD,CAAC,CAACC,CAAD,CAAD,GAAOH,CAAC,CAACG,CAAD,CAAR;AADJ;;AAEA,MAAIH,CAAC,IAAI,IAAL,IAAa,OAAOI,MAAM,CAACK,qBAAd,KAAwC,UAAzD,EACI,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWP,CAAC,GAAGC,MAAM,CAACK,qBAAP,CAA6BT,CAA7B,CAApB,EAAqDU,CAAC,GAAGP,CAAC,CAACQ,MAA3D,EAAmED,CAAC,EAApE,EAAwE;AACpE,QAAIT,CAAC,CAACO,OAAF,CAAUL,CAAC,CAACO,CAAD,CAAX,IAAkB,CAAlB,IAAuBN,MAAM,CAACC,SAAP,CAAiBO,oBAAjB,CAAsCL,IAAtC,CAA2CP,CAA3C,EAA8CG,CAAC,CAACO,CAAD,CAA/C,CAA3B,EACIR,CAAC,CAACC,CAAC,CAACO,CAAD,CAAF,CAAD,GAAUV,CAAC,CAACG,CAAC,CAACO,CAAD,CAAF,CAAX;AACP;AACL,SAAOR,CAAP;AACH,CAVD;;AAWA,OAAO,KAAKW,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,IAAMC,WAAW,GAAG,IAAIC,GAAJ,EAApB;AACA,eAAe,SAASC,MAAT,GAA8B;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AAAA,MACjCC,SADiC,GACID,OADJ,CACjCC,SADiC;AAAA,8BACID,OADJ,CACtBE,gBADsB;AAAA,MACtBA,gBADsB,sCACH,EADG;AAEzC;;;;;;;AAMA,MAAI,OAAOC,QAAP,KAAoB,WAApB,IACA,OAAOC,MAAP,KAAkB,WADlB,IAEA,OAAOD,QAAQ,CAACE,aAAhB,KAAkC,UAFlC,IAGA,OAAOJ,SAAP,KAAqB,QAHrB,IAIAA,SAAS,CAACR,MAJV,IAKA,CAACI,WAAW,CAACS,GAAZ,CAAgBL,SAAhB,CALL,EAKiC;AAC7B,QAAMM,MAAM,GAAGJ,QAAQ,CAACE,aAAT,CAAuB,QAAvB,CAAf;AACAE,IAAAA,MAAM,CAACC,YAAP,CAAoB,KAApB,EAA2BP,SAA3B;AACAM,IAAAA,MAAM,CAACC,YAAP,CAAoB,gBAApB,EAAsCP,SAAtC;AACAJ,IAAAA,WAAW,CAACY,GAAZ,CAAgBR,SAAhB;AACAE,IAAAA,QAAQ,CAACO,IAAT,CAAcC,WAAd,CAA0BJ,MAA1B;AACH;;AACD,MAAMK,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAAA,QACdC,IADc,GACKD,KADL,CACdC,IADc;AAAA,QACRC,QADQ,GACKF,KADL,CACRE,QADQ;AAAA,QACYC,SADZ,GACwBnC,MAAM,CAACgC,KAAD,EAAQ,CAAC,MAAD,EAAS,UAAT,CAAR,CAD9B,EAEtB;;;AACA,QAAII,OAAO,GAAG,IAAd;;AACA,QAAIJ,KAAK,CAACC,IAAV,EAAgB;AACZG,MAAAA,OAAO,GAAG;AAAK,QAAA,SAAS,aAAMH,IAAN;AAAd,QAAV;AACH;;AACD,QAAIC,QAAJ,EAAc;AACVE,MAAAA,OAAO,GAAGF,QAAV;AACH;;AACD,WAAQ,oBAAC,IAAD,eAAUb,gBAAV,EAAgCc,SAAhC,GACPC,OADO,CAAR;AAGH,GAbD;;AAcAL,EAAAA,QAAQ,CAACM,WAAT,GAAuB,UAAvB;AACA,SAAON,QAAP;AACH","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport Icon from './index';\nconst customCache = new Set();\nexport default function create(options = {}) {\n    const { scriptUrl, extraCommonProps = {} } = options;\n    /**\n     * DOM API required.\n     * Make sure in browser environment.\n     * The Custom Icon will create a <script/>\n     * that loads SVG symbols and insert the SVG Element into the document body.\n     */\n    if (typeof document !== 'undefined' &&\n        typeof window !== 'undefined' &&\n        typeof document.createElement === 'function' &&\n        typeof scriptUrl === 'string' &&\n        scriptUrl.length &&\n        !customCache.has(scriptUrl)) {\n        const script = document.createElement('script');\n        script.setAttribute('src', scriptUrl);\n        script.setAttribute('data-namespace', scriptUrl);\n        customCache.add(scriptUrl);\n        document.body.appendChild(script);\n    }\n    const Iconfont = props => {\n        const { type, children } = props, restProps = __rest(props, [\"type\", \"children\"]);\n        // component > children > type\n        let content = null;\n        if (props.type) {\n            content = <use xlinkHref={`#${type}`}/>;\n        }\n        if (children) {\n            content = children;\n        }\n        return (<Icon {...extraCommonProps} {...restProps}>\n        {content}\n      </Icon>);\n    };\n    Iconfont.displayName = 'Iconfont';\n    return Iconfont;\n}\n"],"file":"IconFont.js"}