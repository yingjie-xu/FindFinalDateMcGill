{"version":3,"sources":["transfer/list.jsx"],"names":["React","ReactDOM","omit","classNames","PureRenderMixin","Checkbox","Search","defaultRenderList","OmitProps","triggerEvent","defaultRender","isRenderResultPlainObject","result","isValidElement","Object","prototype","toString","call","renderListNode","renderList","props","bodyContent","customize","TransferList","handleFilter","e","filterValue","target","value","setState","triggerScrollTimer","window","setTimeout","transferNode","findDOMNode","listNode","querySelectorAll","handleClear","matchFilter","text","item","state","filterOption","indexOf","renderItem","render","renderResult","isRenderResultPlain","renderedText","renderedEl","label","args","shouldComponentUpdate","apply","clearTimeout","filteredItems","checkedKeys","length","every","key","disabled","dataSource","filteredRenderItems","forEach","renderedItem","trim","push","prefixCls","searchPlaceholder","notFoundContent","bodyDom","showSearch","search","listBody","bodyNode","selectedKeys","onItemSelectAll","showSelectAll","checkStatus","getCheckStatus","checkedAll","checkAllCheckbox","filter","map","titleText","body","footer","style","itemUnit","itemsUnit","footerDom","listCls","getFilteredItems","unit","getListBody","listFooter","getCheckBox","Component","defaultProps","lazy"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport PureRenderMixin from 'rc-util/lib/PureRenderMixin';\nimport Checkbox from '../checkbox';\nimport Search from './search';\nimport defaultRenderList, { OmitProps } from './renderListBody';\nimport triggerEvent from '../_util/triggerEvent';\nconst defaultRender = () => null;\nfunction isRenderResultPlainObject(result) {\n    return (result &&\n        !React.isValidElement(result) &&\n        Object.prototype.toString.call(result) === '[object Object]');\n}\nfunction renderListNode(renderList, props) {\n    let bodyContent = renderList ? renderList(props) : null;\n    const customize = !!bodyContent;\n    if (!customize) {\n        bodyContent = defaultRenderList(props);\n    }\n    return {\n        customize,\n        bodyContent,\n    };\n}\nexport default class TransferList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleFilter = (e) => {\n            const { handleFilter } = this.props;\n            const { target: { value: filterValue }, } = e;\n            this.setState({ filterValue });\n            handleFilter(e);\n            if (!filterValue) {\n                return;\n            }\n            // Manually trigger scroll event for lazy search bug\n            // https://github.com/ant-design/ant-design/issues/5631\n            this.triggerScrollTimer = window.setTimeout(() => {\n                const transferNode = ReactDOM.findDOMNode(this);\n                const listNode = transferNode.querySelectorAll('.ant-transfer-list-content')[0];\n                if (listNode) {\n                    triggerEvent(listNode, 'scroll');\n                }\n            }, 0);\n        };\n        this.handleClear = () => {\n            const { handleClear } = this.props;\n            this.setState({ filterValue: '' });\n            handleClear();\n        };\n        this.matchFilter = (text, item) => {\n            const { filterValue } = this.state;\n            const { filterOption } = this.props;\n            if (filterOption) {\n                return filterOption(filterValue, item);\n            }\n            return text.indexOf(filterValue) >= 0;\n        };\n        this.renderItem = (item) => {\n            const { render = defaultRender } = this.props;\n            const renderResult = render(item);\n            const isRenderResultPlain = isRenderResultPlainObject(renderResult);\n            return {\n                renderedText: isRenderResultPlain\n                    ? renderResult.value\n                    : renderResult,\n                renderedEl: isRenderResultPlain ? renderResult.label : renderResult,\n                item,\n            };\n        };\n        this.state = {\n            filterValue: '',\n        };\n    }\n    shouldComponentUpdate(...args) {\n        return PureRenderMixin.shouldComponentUpdate.apply(this, args);\n    }\n    componentWillUnmount() {\n        clearTimeout(this.triggerScrollTimer);\n    }\n    getCheckStatus(filteredItems) {\n        const { checkedKeys } = this.props;\n        if (checkedKeys.length === 0) {\n            return 'none';\n        }\n        if (filteredItems.every(item => checkedKeys.indexOf(item.key) >= 0 || !!item.disabled)) {\n            return 'all';\n        }\n        return 'part';\n    }\n    getFilteredItems(dataSource, filterValue) {\n        const filteredItems = [];\n        const filteredRenderItems = [];\n        dataSource.forEach(item => {\n            const renderedItem = this.renderItem(item);\n            const { renderedText } = renderedItem;\n            // Filter skip\n            if (filterValue && filterValue.trim() && !this.matchFilter(renderedText, item)) {\n                return null;\n            }\n            filteredItems.push(item);\n            filteredRenderItems.push(renderedItem);\n        });\n        return { filteredItems, filteredRenderItems };\n    }\n    getListBody(prefixCls, searchPlaceholder, filterValue, filteredItems, notFoundContent, bodyDom, filteredRenderItems, checkedKeys, renderList, showSearch, disabled) {\n        const search = showSearch ? (<div className={`${prefixCls}-body-search-wrapper`}>\n        <Search prefixCls={`${prefixCls}-search`} onChange={this.handleFilter} handleClear={this.handleClear} placeholder={searchPlaceholder} value={filterValue} disabled={disabled}/>\n      </div>) : null;\n        let listBody = bodyDom;\n        if (!listBody) {\n            let bodyNode;\n            const { bodyContent, customize } = renderListNode(renderList, Object.assign(Object.assign({}, omit(this.props, OmitProps)), { filteredItems,\n                filteredRenderItems, selectedKeys: checkedKeys }));\n            // We should wrap customize list body in a classNamed div to use flex layout.\n            if (customize) {\n                bodyNode = <div className={`${prefixCls}-body-customize-wrapper`}>{bodyContent}</div>;\n            }\n            else {\n                bodyNode = filteredItems.length ? (bodyContent) : (<div className={`${prefixCls}-body-not-found`}>{notFoundContent}</div>);\n            }\n            listBody = (<div className={classNames(showSearch ? `${prefixCls}-body ${prefixCls}-body-with-search` : `${prefixCls}-body`)}>\n          {search}\n          {bodyNode}\n        </div>);\n        }\n        return listBody;\n    }\n    getCheckBox(filteredItems, onItemSelectAll, showSelectAll, disabled) {\n        const checkStatus = this.getCheckStatus(filteredItems);\n        const checkedAll = checkStatus === 'all';\n        const checkAllCheckbox = showSelectAll !== false && (<Checkbox disabled={disabled} checked={checkedAll} indeterminate={checkStatus === 'part'} onChange={() => {\n            // Only select enabled items\n            onItemSelectAll(filteredItems.filter(item => !item.disabled).map(({ key }) => key), !checkedAll);\n        }}/>);\n        return checkAllCheckbox;\n    }\n    render() {\n        const { filterValue } = this.state;\n        const { prefixCls, dataSource, titleText, checkedKeys, disabled, body, footer, showSearch, style, searchPlaceholder, notFoundContent, itemUnit, itemsUnit, renderList, onItemSelectAll, showSelectAll, } = this.props;\n        // Custom Layout\n        const footerDom = footer && footer(this.props);\n        const bodyDom = body && body(this.props);\n        const listCls = classNames(prefixCls, {\n            [`${prefixCls}-with-footer`]: !!footerDom,\n        });\n        // ====================== Get filtered, checked item list ======================\n        const { filteredItems, filteredRenderItems } = this.getFilteredItems(dataSource, filterValue);\n        // ================================= List Body =================================\n        const unit = dataSource.length > 1 ? itemsUnit : itemUnit;\n        const listBody = this.getListBody(prefixCls, searchPlaceholder, filterValue, filteredItems, notFoundContent, bodyDom, filteredRenderItems, checkedKeys, renderList, showSearch, disabled);\n        // ================================ List Footer ================================\n        const listFooter = footerDom ? <div className={`${prefixCls}-footer`}>{footerDom}</div> : null;\n        const checkAllCheckbox = this.getCheckBox(filteredItems, onItemSelectAll, showSelectAll, disabled);\n        // ================================== Render ===================================\n        return (<div className={listCls} style={style}>\n        \n        <div className={`${prefixCls}-header`}>\n          {checkAllCheckbox}\n          <span className={`${prefixCls}-header-selected`}>\n            <span>\n              {(checkedKeys.length > 0 ? `${checkedKeys.length}/` : '') + filteredItems.length}{' '}\n              {unit}\n            </span>\n            <span className={`${prefixCls}-header-title`}>{titleText}</span>\n          </span>\n        </div>\n\n        \n        {listBody}\n\n        \n        {listFooter}\n      </div>);\n    }\n}\nTransferList.defaultProps = {\n    dataSource: [],\n    titleText: '',\n    showSearch: false,\n    lazy: {},\n};\n"],"file":"list.js"}