{"version":3,"sources":["descriptions/index.jsx"],"names":["React","classNames","toArray","warning","ResponsiveObserve","responsiveArray","ConfigConsumer","Col","flattenChildren","children","reduce","flatChildren","child","type","Fragment","concat","props","push","DescriptionsItem","generateChildrenRows","column","rows","columns","leftSpans","itemNodes","forEach","node","index","itemNode","lastItem","length","lastSpanSame","span","cloneElement","renderRow","bordered","layout","colon","prefixCls","renderCol","colItem","idx","key","cloneChildren","cloneContentChildren","childrenItem","defaultColumnMap","xxl","xl","lg","md","sm","xs","Descriptions","arguments","state","screens","token","subscribe","setState","unsubscribe","i","breakpoint","undefined","getPrefixCls","className","customizePrefixCls","title","size","style","getColumn","map","isValidElement","filter","childrenArray","Component","defaultProps","Item"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from 'rc-util/lib/Children/toArray';\nimport warning from '../_util/warning';\nimport ResponsiveObserve, { responsiveArray, } from '../_util/responsiveObserve';\nimport { ConfigConsumer } from '../config-provider';\nimport Col from './Col';\n// https://github.com/smooth-code/react-flatten-children/\nfunction flattenChildren(children) {\n    if (!children) {\n        return [];\n    }\n    return toArray(children).reduce((flatChildren, child) => {\n        if (child && child.type === React.Fragment) {\n            return flatChildren.concat(flattenChildren(child.props.children));\n        }\n        flatChildren.push(child);\n        return flatChildren;\n    }, []);\n}\nconst DescriptionsItem = ({ children }) => children;\n/**\n * Convert children into `column` groups.\n * @param children: DescriptionsItem\n * @param column: number\n */\nconst generateChildrenRows = (children, column) => {\n    const rows = [];\n    let columns = null;\n    let leftSpans;\n    const itemNodes = flattenChildren(children);\n    itemNodes.forEach((node, index) => {\n        let itemNode = node;\n        if (!columns) {\n            leftSpans = column;\n            columns = [];\n            rows.push(columns);\n        }\n        // Always set last span to align the end of Descriptions\n        const lastItem = index === itemNodes.length - 1;\n        let lastSpanSame = true;\n        if (lastItem) {\n            lastSpanSame = !itemNode.props.span || itemNode.props.span === leftSpans;\n            itemNode = React.cloneElement(itemNode, {\n                span: leftSpans,\n            });\n        }\n        // Calculate left fill span\n        const { span = 1 } = itemNode.props;\n        columns.push(itemNode);\n        leftSpans -= span;\n        if (leftSpans <= 0) {\n            columns = null;\n            warning(leftSpans === 0 && lastSpanSame, 'Descriptions', 'Sum of column `span` in a line exceeds `column` of Descriptions.');\n        }\n    });\n    return rows;\n};\nconst renderRow = (children, index, { prefixCls }, bordered, layout, colon) => {\n    const renderCol = (colItem, type, idx) => {\n        return (<Col child={colItem} bordered={bordered} colon={colon} type={type} key={`${type}-${colItem.key || idx}`} layout={layout}/>);\n    };\n    const cloneChildren = [];\n    const cloneContentChildren = [];\n    flattenChildren(children).forEach((childrenItem, idx) => {\n        cloneChildren.push(renderCol(childrenItem, 'label', idx));\n        if (layout === 'vertical') {\n            cloneContentChildren.push(renderCol(childrenItem, 'content', idx));\n        }\n        else if (bordered) {\n            cloneChildren.push(renderCol(childrenItem, 'content', idx));\n        }\n    });\n    if (layout === 'vertical') {\n        return [\n            <tr className={`${prefixCls}-row`} key={`label-${index}`}>\n        {cloneChildren}\n      </tr>,\n            <tr className={`${prefixCls}-row`} key={`content-${index}`}>\n        {cloneContentChildren}\n      </tr>,\n        ];\n    }\n    return (<tr className={`${prefixCls}-row`} key={index}>\n      {cloneChildren}\n    </tr>);\n};\nconst defaultColumnMap = {\n    xxl: 3,\n    xl: 3,\n    lg: 3,\n    md: 3,\n    sm: 2,\n    xs: 1,\n};\nclass Descriptions extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            screens: {},\n        };\n    }\n    componentDidMount() {\n        const { column } = this.props;\n        this.token = ResponsiveObserve.subscribe(screens => {\n            if (typeof column !== 'object') {\n                return;\n            }\n            this.setState({\n                screens,\n            });\n        });\n    }\n    componentWillUnmount() {\n        ResponsiveObserve.unsubscribe(this.token);\n    }\n    getColumn() {\n        const { column } = this.props;\n        if (typeof column === 'object') {\n            for (let i = 0; i < responsiveArray.length; i++) {\n                const breakpoint = responsiveArray[i];\n                if (this.state.screens[breakpoint] && column[breakpoint] !== undefined) {\n                    return column[breakpoint] || defaultColumnMap[breakpoint];\n                }\n            }\n        }\n        // If the configuration is not an object, it is a number, return number\n        if (typeof column === 'number') {\n            return column;\n        }\n        // If it is an object, but no response is found, this happens only in the test.\n        // Maybe there are some strange environments\n        return 3;\n    }\n    render() {\n        return (<ConfigConsumer>\n        {({ getPrefixCls }) => {\n            const { className, prefixCls: customizePrefixCls, title, size, children, bordered = false, layout = 'horizontal', colon = true, style, } = this.props;\n            const prefixCls = getPrefixCls('descriptions', customizePrefixCls);\n            const column = this.getColumn();\n            const cloneChildren = flattenChildren(children)\n                .map((child) => {\n                if (React.isValidElement(child)) {\n                    return React.cloneElement(child, {\n                        prefixCls,\n                    });\n                }\n                return null;\n            })\n                .filter((node) => node);\n            const childrenArray = generateChildrenRows(cloneChildren, column);\n            return (<div className={classNames(prefixCls, className, {\n                [`${prefixCls}-${size}`]: size !== 'default',\n                [`${prefixCls}-bordered`]: !!bordered,\n            })} style={style}>\n              {title && <div className={`${prefixCls}-title`}>{title}</div>}\n              <div className={`${prefixCls}-view`}>\n                <table>\n                  <tbody>\n                    {childrenArray.map((child, index) => renderRow(child, index, {\n                prefixCls,\n            }, bordered, layout, colon))}\n                  </tbody>\n                </table>\n              </div>\n            </div>);\n        }}\n      </ConfigConsumer>);\n    }\n}\nDescriptions.defaultProps = {\n    size: 'default',\n    column: defaultColumnMap,\n};\nDescriptions.Item = DescriptionsItem;\nexport default Descriptions;\n"],"file":"index.js"}