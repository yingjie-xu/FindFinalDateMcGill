{"version":3,"sources":["radio/group.jsx"],"names":["React","PropTypes","classNames","shallowEqual","polyfill","Radio","ConfigConsumer","getCheckedValue","children","value","matched","Children","forEach","radio","props","checked","undefined","RadioGroup","onRadioChange","ev","lastValue","state","target","setState","onChange","renderGroup","getPrefixCls","customizePrefixCls","prefixCls","className","options","buttonStyle","groupPrefixCls","classString","size","length","map","option","disabled","label","style","onMouseEnter","onMouseLeave","id","defaultValue","checkedValue","radioGroup","name","nextProps","nextState","Component","defaultProps","childContextTypes","any"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Radio from './radio';\nimport { ConfigConsumer } from '../config-provider';\nfunction getCheckedValue(children) {\n    let value = null;\n    let matched = false;\n    React.Children.forEach(children, (radio) => {\n        if (radio && radio.props && radio.props.checked) {\n            value = radio.props.value;\n            matched = true;\n        }\n    });\n    return matched ? { value } : undefined;\n}\nclass RadioGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onRadioChange = (ev) => {\n            const lastValue = this.state.value;\n            const { value } = ev.target;\n            if (!('value' in this.props)) {\n                this.setState({\n                    value,\n                });\n            }\n            const { onChange } = this.props;\n            if (onChange && value !== lastValue) {\n                onChange(ev);\n            }\n        };\n        this.renderGroup = ({ getPrefixCls }) => {\n            const { props } = this;\n            const { prefixCls: customizePrefixCls, className = '', options, buttonStyle } = props;\n            const prefixCls = getPrefixCls('radio', customizePrefixCls);\n            const groupPrefixCls = `${prefixCls}-group`;\n            const classString = classNames(groupPrefixCls, `${groupPrefixCls}-${buttonStyle}`, {\n                [`${groupPrefixCls}-${props.size}`]: props.size,\n            }, className);\n            let { children } = props;\n            // 如果存在 options, 优先使用\n            if (options && options.length > 0) {\n                children = options.map(option => {\n                    if (typeof option === 'string') {\n                        // 此处类型自动推导为 string\n                        return (<Radio key={option} prefixCls={prefixCls} disabled={this.props.disabled} value={option} checked={this.state.value === option}>\n              {option}\n            </Radio>);\n                    }\n                    // 此处类型自动推导为 { label: string value: string }\n                    return (<Radio key={`radio-group-value-options-${option.value}`} prefixCls={prefixCls} disabled={option.disabled || this.props.disabled} value={option.value} checked={this.state.value === option.value}>\n            {option.label}\n          </Radio>);\n                });\n            }\n            return (<div className={classString} style={props.style} onMouseEnter={props.onMouseEnter} onMouseLeave={props.onMouseLeave} id={props.id}>\n        {children}\n      </div>);\n        };\n        let value;\n        if ('value' in props) {\n            value = props.value;\n        }\n        else if ('defaultValue' in props) {\n            value = props.defaultValue;\n        }\n        else {\n            const checkedValue = getCheckedValue(props.children);\n            value = checkedValue && checkedValue.value;\n        }\n        this.state = {\n            value,\n        };\n    }\n    static getDerivedStateFromProps(nextProps) {\n        if ('value' in nextProps) {\n            return {\n                value: nextProps.value,\n            };\n        }\n        const checkedValue = getCheckedValue(nextProps.children);\n        if (checkedValue) {\n            return {\n                value: checkedValue.value,\n            };\n        }\n        return null;\n    }\n    getChildContext() {\n        return {\n            radioGroup: {\n                onChange: this.onRadioChange,\n                value: this.state.value,\n                disabled: this.props.disabled,\n                name: this.props.name,\n            },\n        };\n    }\n    shouldComponentUpdate(nextProps, nextState) {\n        return !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderGroup}</ConfigConsumer>;\n    }\n}\nRadioGroup.defaultProps = {\n    buttonStyle: 'outline',\n};\nRadioGroup.childContextTypes = {\n    radioGroup: PropTypes.any,\n};\npolyfill(RadioGroup);\nexport default RadioGroup;\n"],"file":"group.js"}