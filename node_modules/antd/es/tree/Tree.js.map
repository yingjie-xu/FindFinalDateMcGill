{"version":3,"sources":["tree/Tree.jsx"],"names":["React","RcTree","TreeNode","classNames","DirectoryTree","Icon","ConfigConsumer","collapseMotion","Tree","arguments","renderSwitcherIcon","prefixCls","switcherIcon","isLeaf","expanded","loading","showLine","props","switcherCls","cloneElement","className","setTreeRef","node","tree","renderTree","getPrefixCls","customizePrefixCls","showIcon","blockNode","children","checkable","nodeProps","Component","defaultProps","motion","motionAppear"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport RcTree, { TreeNode } from 'rc-tree';\nimport classNames from 'classnames';\nimport DirectoryTree from './DirectoryTree';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport collapseMotion from '../_util/motion';\nexport default class Tree extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderSwitcherIcon = (prefixCls, switcherIcon, { isLeaf, expanded, loading }) => {\n            const { showLine } = this.props;\n            if (loading) {\n                return <Icon type=\"loading\" className={`${prefixCls}-switcher-loading-icon`}/>;\n            }\n            const switcherCls = `${prefixCls}-switcher-icon`;\n            if (switcherIcon) {\n                return React.cloneElement(switcherIcon, {\n                    className: classNames(switcherIcon.props.className || '', switcherCls),\n                });\n            }\n            if (isLeaf) {\n                return showLine ? <Icon type=\"file\" className={`${prefixCls}-switcher-line-icon`}/> : null;\n            }\n            return showLine ? (<Icon type={expanded ? 'minus-square' : 'plus-square'} className={`${prefixCls}-switcher-line-icon`} theme=\"outlined\"/>) : (<Icon type=\"caret-down\" className={switcherCls} theme=\"filled\"/>);\n        };\n        this.setTreeRef = (node) => {\n            this.tree = node;\n        };\n        this.renderTree = ({ getPrefixCls }) => {\n            const { props } = this;\n            const { prefixCls: customizePrefixCls, className, showIcon, switcherIcon, blockNode, children, } = props;\n            const { checkable } = props;\n            const prefixCls = getPrefixCls('tree', customizePrefixCls);\n            return (<RcTree ref={this.setTreeRef} {...props} prefixCls={prefixCls} className={classNames(className, {\n                [`${prefixCls}-icon-hide`]: !showIcon,\n                [`${prefixCls}-block-node`]: blockNode,\n            })} checkable={checkable ? <span className={`${prefixCls}-checkbox-inner`}/> : checkable} switcherIcon={(nodeProps) => this.renderSwitcherIcon(prefixCls, switcherIcon, nodeProps)}>\n        {children}\n      </RcTree>);\n        };\n    }\n    render() {\n        return <ConfigConsumer>{this.renderTree}</ConfigConsumer>;\n    }\n}\nTree.TreeNode = TreeNode;\nTree.DirectoryTree = DirectoryTree;\nTree.defaultProps = {\n    checkable: false,\n    showIcon: false,\n    motion: Object.assign(Object.assign({}, collapseMotion), { motionAppear: false }),\n    blockNode: false,\n};\n"],"file":"Tree.js"}