{"version":3,"sources":["Components/ExamCard.js","Components/ExportToCalendar.js","libs/ics.js","Components/Cards.js","Components/Input.js","App.js","serviceWorker.js","index.js"],"names":["ExamCard","course","this","props","lg","md","style","padding","title","bordered","type","Component","ExportToCalendar","cal","uidDomain","prodId","navigator","userAgent","indexOf","SEPARATOR","appVersion","calendarEvents","calendarStart","join","calendarEnd","BYDAY_VALUES","newUID","uid","uid_from_title_and_dates","title_and_dates","default_uid","undefined","bool","subject","description","location","begin","stop","rrule","freq","until","isNaN","Date","parse","interval","parseInt","count","byday","Object","prototype","toString","call","length","d","filter","elem","pos","start_date","end_date","now_date","start_year","getFullYear","slice","start_month","getMonth","start_day","getDate","start_hours","getHours","start_minutes","getMinutes","start_seconds","getSeconds","end_year","end_month","end_day","end_hours","end_minutes","end_seconds","start_time","end_time","rruleString","start","end","now","uDate","toISOString","substring","replace","calendarEvent","getUID","splice","push","filename","ext","blob","calendar","Blob","saveAs","console","log","ics","exams","map","exam","section","date","time","startTime","concat","endTime","year","setYear","setHours","addEvent","onClick","download","Cards","courses","course_list","data","includes","examList","c","key","id","arr","DynamicFieldSet","remove","k","form","keys","getFieldValue","setFieldsValue","add","nextKeys","handleSubmit","e","preventDefault","validateFields","err","values","names","forEach","entry","toUpperCase","getFieldDecorator","formItemLayout","wrapperCol","xs","span","sm","formItemLayoutWithOutLabel","offset","initialValue","formItems","index","Item","required","validateTrigger","rules","whitespace","message","placeholder","width","className","onSubmit","htmlType","WrappedDynamicFieldSet","create","name","App","href","target","rel","Input","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.865ab9d0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Card, Col, Icon} from \"antd\";\r\n// <Row gutter={[24, 24]}>\r\n//TODO: make card content prettier, add icons or grids\r\nclass ExamCard extends Component{\r\n    render(){\r\n    const {course} = this.props;\r\n        return(\r\n            <Col lg={12} md={24} style={{padding:'10px'}}>\r\n                <Card title={`${ course[\"COURSE NUMBER\"] }-${course[\"SECTION\"]} ${course[\"TITLE\"]}`} bordered={true}>\r\n                    <Icon type=\"clock-circle\" /> &nbsp;\r\n                    {course[\"EXAM DATE\"]} {course[\"TIME\"]} \r\n                    {/* <Icon type=\"home\" />&nbsp; {course[\"BUILDING\"]} {course[\"ROOM\"]} \r\n                    <br />\r\n                    Row {course[\"ROW\"]} From {course[\"FROM\"]} To {course[\"TO\"]} */}\r\n                </Card>\r\n            </Col>\r\n        )\r\n\r\n       \r\n    }\r\n}\r\n\r\nexport default ExamCard;\r\n","import React, { Component } from \"react\";\r\nimport { Button} from \"antd\";\r\nimport {ics} from '../libs/ics.js';\r\n\r\nclass ExportToCalendar extends Component{\r\n    //props: string list list\r\n    //e.g. exams = [['MATH 240', 001','Fieldhouse', '11-20', '12\\/9\\/2019','9:00'],...]\r\n    render(){\r\n    let cal = ics();\r\n    const exams = this.props.exams;\r\n    exams.map((exam) => //add exams to calendar\r\n    {\r\n      let [course, section, building, row, date, time] = exam;\r\n      let startTime = new Date(date.concat(time));\r\n      let endTime = new Date(startTime);\r\n      \r\n      // following lines are used for first released schedule\r\n      var today = new Date();\r\n      var year = today.getFullYear();\r\n      startTime.setYear(year);\r\n      endTime.setYear(year); \r\n      //\r\n      \r\n      endTime.setHours(startTime.getHours()+3); //exams are 3 hours\r\n      //addEvent(subject, description, location, begin, end)\r\n      cal.addEvent(course.concat('-', section,' FINAL EXAM'),'Final Exam'.concat(' of ',course,'-', section),null, startTime, endTime);\r\n      // building.concat(row), \r\n      // replace the null by the line above if location exists\r\n    });\r\n    let downloadCal = ()=>cal.download();\r\n        return(\r\n        <Button onClick={downloadCal}>Export to Calendar</Button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ExportToCalendar;\r\n","/* global saveAs, Blob, console */\r\nimport { saveAs } from 'file-saver';\r\n\r\nexport let ics = function(uidDomain, prodId) {\r\n  'use strict';\r\n\r\n  if (navigator.userAgent.indexOf('MSIE') > -1 && navigator.userAgent.indexOf('MSIE 10') == -1) {\r\n    console.log('Unsupported Browser');\r\n    return;\r\n  }\r\n\r\n  if (typeof uidDomain === 'undefined') { uidDomain = 'default'; }\r\n  if (typeof prodId === 'undefined') { prodId = 'Calendar'; }\r\n\r\n  var SEPARATOR = (navigator.appVersion.indexOf('Win') !== -1) ? '\\r\\n' : '\\n';\r\n  var calendarEvents = [];\r\n  var calendarStart = [\r\n    'BEGIN:VCALENDAR',\r\n    'PRODID:' + prodId,\r\n    'VERSION:2.0'\r\n  ].join(SEPARATOR);\r\n  var calendarEnd = SEPARATOR + 'END:VCALENDAR';\r\n  var BYDAY_VALUES = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'];\r\n  var uid = ''; // a holder for the UID parameter for each event\r\n  var uid_from_title_and_dates = false; // should we create a new UID from the title arg?\r\n\r\n  return {\r\n    /**\r\n     * Returns events array\r\n     * @return {array} Events\r\n     */\r\n    'events': function() {\r\n      return calendarEvents;\r\n    },\r\n\r\n    /**\r\n     * Returns calendar\r\n     * @return {string} Calendar in iCalendar format\r\n     */\r\n    'calendar': function() {\r\n      return calendarStart + SEPARATOR + calendarEvents.join(SEPARATOR) + calendarEnd;\r\n    },\r\n    \r\n    /**\r\n     * Sets this.uid to be a passed argument\r\n     * @param {string} newUID  The UID to store\r\n     */\r\n    'setUID': function(newUID) {\r\n      this.uid = newUID;\r\n      \r\n      // if we have both the autoUID and setUID, we need to allow the more specific to have higher precedence\r\n      this.uid_from_title_and_dates = false;\r\n    },\r\n    \r\n    /**\r\n     * Retrieves this.uid if it's set, otherwise it grabs the title and dates or the default uid depending on the this.uid_from_title flag\r\n     * @param {string} [title_and_dates=]\r\n     * @param {string} [default_uid=]\r\n     */\r\n     'getUID': function(title_and_dates = '', default_uid = '') {\r\n    \r\n        if (this.uid_from_title_and_dates) {\r\n          return title_and_dates;\r\n        }\r\n\r\n        if (this.uid != undefined && this.uid != '') {\r\n          return this.uid;\r\n        }\r\n  \r\n        return default_uid;\r\n     },\r\n    \r\n    /**\r\n     * Sets the this.uid_from_title_and_dates flag which allows a new UID for each event generated from the title of the event\r\n     * @param {boolean}\r\n     */\r\n    'autoUID': function(bool) {\r\n      this.uid_from_title_and_dates = bool;\r\n    },\r\n\r\n    /**\r\n     * Add event to the calendar\r\n     * @param  {string} subject     Subject/Title of event\r\n     * @param  {string} description Description of event\r\n     * @param  {string} location    Location of event\r\n     * @param  {string} begin       Beginning date of event\r\n     * @param  {string} stop        Ending date of event\r\n     */\r\n    'addEvent': function(subject, description, location, begin, stop, rrule) {\r\n      // I'm not in the mood to make these optional... So they are all required\r\n      if (typeof subject === 'undefined' ||\r\n        typeof description === 'undefined' ||\r\n        typeof location === 'undefined' ||\r\n        typeof begin === 'undefined' ||\r\n        typeof stop === 'undefined'\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n      // validate rrule\r\n      if (rrule) {\r\n        if (!rrule.rrule) {\r\n          if (rrule.freq !== 'YEARLY' && rrule.freq !== 'MONTHLY' && rrule.freq !== 'WEEKLY' && rrule.freq !== 'DAILY') {\r\n            throw \"Recurrence rrule frequency must be provided and be one of the following: 'YEARLY', 'MONTHLY', 'WEEKLY', or 'DAILY'\";\r\n          }\r\n\r\n          if (rrule.until) {\r\n            if (isNaN(Date.parse(rrule.until))) {\r\n              throw \"Recurrence rrule 'until' must be a valid date string\";\r\n            }\r\n          }\r\n\r\n          if (rrule.interval) {\r\n            if (isNaN(parseInt(rrule.interval))) {\r\n              throw \"Recurrence rrule 'interval' must be an integer\";\r\n            }\r\n          }\r\n\r\n          if (rrule.count) {\r\n            if (isNaN(parseInt(rrule.count))) {\r\n              throw \"Recurrence rrule 'count' must be an integer\";\r\n            }\r\n          }\r\n\r\n          if (typeof rrule.byday !== 'undefined') {\r\n            if ((Object.prototype.toString.call(rrule.byday) !== '[object Array]')) {\r\n              throw \"Recurrence rrule 'byday' must be an array\";\r\n            }\r\n\r\n            if (rrule.byday.length > 7) {\r\n              throw \"Recurrence rrule 'byday' array must not be longer than the 7 days in a week\";\r\n            }\r\n\r\n            // Filter any possible repeats\r\n            rrule.byday = rrule.byday.filter(function(elem, pos) {\r\n              return rrule.byday.indexOf(elem) == pos;\r\n            });\r\n\r\n            for (var d in rrule.byday) {\r\n              if (BYDAY_VALUES.indexOf(rrule.byday[d]) < 0) {\r\n                throw \"Recurrence rrule 'byday' values must include only the following: 'SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'\";\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      //TODO add time and time zone? use moment to format?\r\n      var start_date = new Date(begin);\r\n      var end_date = new Date(stop);\r\n      var now_date = new Date();\r\n\r\n      var start_year = (\"0000\" + (start_date.getFullYear().toString())).slice(-4);\r\n      var start_month = (\"00\" + ((start_date.getMonth() + 1).toString())).slice(-2);\r\n      var start_day = (\"00\" + ((start_date.getDate()).toString())).slice(-2);\r\n      var start_hours = (\"00\" + (start_date.getHours().toString())).slice(-2);\r\n      var start_minutes = (\"00\" + (start_date.getMinutes().toString())).slice(-2);\r\n      var start_seconds = (\"00\" + (start_date.getSeconds().toString())).slice(-2);\r\n\r\n      var end_year = (\"0000\" + (end_date.getFullYear().toString())).slice(-4);\r\n      var end_month = (\"00\" + ((end_date.getMonth() + 1).toString())).slice(-2);\r\n      var end_day = (\"00\" + ((end_date.getDate()).toString())).slice(-2);\r\n      var end_hours = (\"00\" + (end_date.getHours().toString())).slice(-2);\r\n      var end_minutes = (\"00\" + (end_date.getMinutes().toString())).slice(-2);\r\n      var end_seconds = (\"00\" + (end_date.getSeconds().toString())).slice(-2);\r\n\r\n      var now_year = (\"0000\" + (now_date.getFullYear().toString())).slice(-4);\r\n      var now_month = (\"00\" + ((now_date.getMonth() + 1).toString())).slice(-2);\r\n      var now_day = (\"00\" + ((now_date.getDate()).toString())).slice(-2);\r\n      var now_hours = (\"00\" + (now_date.getHours().toString())).slice(-2);\r\n      var now_minutes = (\"00\" + (now_date.getMinutes().toString())).slice(-2);\r\n      var now_seconds = (\"00\" + (now_date.getSeconds().toString())).slice(-2);\r\n\r\n      // Since some calendars don't add 0 second events, we need to remove time if there is none...\r\n      var start_time = '';\r\n      var end_time = '';\r\n      if (start_hours + start_minutes + start_seconds + end_hours + end_minutes + end_seconds != 0) {\r\n        start_time = 'T' + start_hours + start_minutes + start_seconds;\r\n        end_time = 'T' + end_hours + end_minutes + end_seconds;\r\n      }\r\n      var now_time = 'T' + now_hours + now_minutes + now_seconds;\r\n\r\n      var start = start_year + start_month + start_day + start_time;\r\n      var end = end_year + end_month + end_day + end_time;\r\n      var now = now_year + now_month + now_day + now_time;\r\n\r\n      // recurrence rrule vars\r\n      var rruleString;\r\n      if (rrule) {\r\n        if (rrule.rrule) {\r\n          rruleString = rrule.rrule;\r\n        } else {\r\n          rruleString = 'rrule:FREQ=' + rrule.freq;\r\n\r\n          if (rrule.until) {\r\n            var uDate = new Date(Date.parse(rrule.until)).toISOString();\r\n            rruleString += ';UNTIL=' + uDate.substring(0, uDate.length - 13).replace(/[-]/g, '') + '000000Z';\r\n          }\r\n\r\n          if (rrule.interval) {\r\n            rruleString += ';INTERVAL=' + rrule.interval;\r\n          }\r\n\r\n          if (rrule.count) {\r\n            rruleString += ';COUNT=' + rrule.count;\r\n          }\r\n\r\n          if (rrule.byday && rrule.byday.length > 0) {\r\n            rruleString += ';BYDAY=' + rrule.byday.join(',');\r\n          }\r\n        }\r\n      }\r\n\r\n      var stamp = new Date().toISOString();\r\n\r\n      var calendarEvent = [\r\n        'BEGIN:VEVENT',\r\n        'UID:' + this.getUID(subject+now+start+end, calendarEvents.length + \"@\" + uidDomain),\r\n        'CLASS:PUBLIC',\r\n        'DESCRIPTION:' + description,\r\n        'DTSTAMP;VALUE=DATE-TIME:' + now,\r\n        'DTSTART;VALUE=DATE-TIME:' + start,\r\n        'DTEND;VALUE=DATE-TIME:' + end,\r\n        'LOCATION:' + location,\r\n        'SUMMARY;LANGUAGE=en-us:' + subject,\r\n        'TRANSP:TRANSPARENT',\r\n        'END:VEVENT'\r\n      ];\r\n\r\n      if (rruleString) {\r\n        calendarEvent.splice(4, 0, rruleString);\r\n      }\r\n\r\n      calendarEvent = calendarEvent.join(SEPARATOR);\r\n\r\n      calendarEvents.push(calendarEvent);\r\n      return calendarEvent;\r\n    },\r\n\r\n    /**\r\n     * Download calendar using the saveAs function from filesave.js\r\n     * @param  {string} filename Filename\r\n     * @param  {string} ext      Extention\r\n     */\r\n    'download': function(filename, ext) {\r\n      if (calendarEvents.length < 1) {\r\n        return false;\r\n      }\r\n\r\n      ext = (typeof ext !== 'undefined') ? ext : '.ics';\r\n      filename = (typeof filename !== 'undefined') ? filename : 'calendar';\r\n      var calendar = calendarStart + SEPARATOR + calendarEvents.join(SEPARATOR) + calendarEnd;\r\n\r\n      var blob;\r\n      // chrome or firefox\r\n      blob = new Blob([calendar]);\r\n      \r\n      saveAs(blob, filename + ext);\r\n      return calendar;\r\n    },\r\n\r\n    /**\r\n     * Build and return the ical contents\r\n     */\r\n    'build': function() {\r\n      if (calendarEvents.length < 1) {\r\n        return false;\r\n      }\r\n\r\n      var calendar = calendarStart + SEPARATOR + calendarEvents.join(SEPARATOR) + calendarEnd;\r\n\r\n      return calendar;\r\n    }\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport data from \"../Assets/washed.json\";\r\nimport ExamCard from \"./ExamCard.js\";\r\nimport ExportToCalendar from \"./ExportToCalendar.js\";\r\n// import ExportToCalendar from \"../ExportToCalendar\";\r\n\r\nclass Cards extends Component{\r\n    render(){\r\n      const {courses} = this.props;\r\n      let course_list = [];\r\n      course_list = data.filter(course => {\r\n        return courses.includes(course['COURSE NUMBER']);\r\n      })\r\n      console.log(course_list);\r\n      let examList = course_list.map(\r\n        c => [c[\"COURSE NUMBER\"],\r\n        c[\"SECTION\"],\r\n        c[\"BUILDING\"],\r\n        c[\"ROW\"],\r\n        c[\"EXAM DATE\"],\r\n        c[\"TIME\"]]\r\n        );\r\n      return (\r\n        <div>\r\n          {course_list.length === 0 ? \r\n            <div>\r\n              <h2>Instructions: </h2>\r\n              <h3>\r\n                <p>Start by click the \"add course\" button\r\n                  <br/>Type in your courses (e.g. comp 202)\r\n                  <br/>Click the \"submit\" button\r\n                  <br/>View your final schedule\r\n                  <br/>Note: Invalid courses will be ignored\r\n                </p>\r\n              </h3>\r\n            </div> \r\n            : <div></div>\r\n          }\r\n          {course_list.map(course => <ExamCard course={course} key={course['COURSE NUMBER'] + course[\"SECTION\"] + course[\"ROW\"]}/>)}\r\n          <ExportToCalendar exams = {examList}></ExportToCalendar>\r\n        </div>\r\n      )\r\n    }\r\n}\r\n\r\nexport default Cards;","import React, {Component} from 'react';\r\nimport Cards from './Cards';\r\nimport { Form, Input, Icon, Button, Row, Col } from 'antd';\r\nimport data from \"../Assets/washed.json\";\r\n\r\nlet id = 0;\r\nlet arr = [];\r\n\r\nclass DynamicFieldSet extends Component {\r\n  remove = k => {\r\n    const { form } = this.props;\r\n    // can use data-binding to get\r\n    const keys = form.getFieldValue('keys');\r\n    // We need at least one course\r\n    if (keys.length === 1) {\r\n      return;\r\n    }\r\n\r\n    // can use data-binding to set\r\n    form.setFieldsValue({\r\n      keys: keys.filter(key => key !== k),\r\n    });\r\n  };\r\n\r\n  add = () => {\r\n    const { form } = this.props;\r\n    // can use data-binding to get\r\n    const keys = form.getFieldValue('keys');\r\n    const nextKeys = keys.concat(id++);\r\n    // can use data-binding to set\r\n    // important! notify form to detect changes\r\n    form.setFieldsValue({\r\n      keys: nextKeys,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    arr = [];\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        const { keys, names } = values;\r\n        console.log('Received values of form: ', values);\r\n        console.log('Merged values:', keys.map(key => names[key]));\r\n        let list = keys.map(key => names[key]);\r\n        \r\n        list.forEach(entry => {\r\n          // if entry exists\r\n          arr.push(entry.replace(/  +/g, ' ') //handle input with multiple space\r\n            .replace(/([A-z]{4})(\\d)/, '$1 $2') //handle input without space\r\n            .toUpperCase()); \r\n        });\r\n        //console.log(arr)\r\n        let courses = data.map(e => e['COURSE NUMBER']);\r\n        arr = arr.filter(e => {\r\n          return courses.includes(e);\r\n        })\r\n        console.log(arr);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    const formItemLayout = {\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 20 },\r\n      },\r\n    };\r\n    const formItemLayoutWithOutLabel = {\r\n      wrapperCol: {\r\n        xs: { span: 24, offset: 0 },\r\n        sm: { span: 20, offset: 0 },\r\n      },\r\n    };\r\n    getFieldDecorator('keys', { initialValue: [-1] });\r\n    const keys = getFieldValue('keys');\r\n    const formItems = keys.map((k, index) => (\r\n      <Form.Item\r\n        {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n        required={false}\r\n        key={k}\r\n      >\r\n        {getFieldDecorator(`names[${k}]`, {\r\n          validateTrigger: ['onChange', 'onBlur'],\r\n          rules: [\r\n            {\r\n              required: true,\r\n              whitespace: true,\r\n              message: \"Please input course's name or delete this field.\",\r\n            },\r\n          ],\r\n        })(<Input placeholder=\"course name\" style={{ width: '80%'}} />)}\r\n        {keys.length > 1 ? (\r\n          <Icon\r\n            className=\"dynamic-delete-button\"\r\n            type=\"minus-circle-o\"\r\n            onClick={() => this.remove(k)}\r\n          />\r\n        ) : null}\r\n      </Form.Item>\r\n    ));\r\n    return (\r\n      <Row>\r\n        <Col md={8} xs={24}>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            {formItems}\r\n            <Form.Item {...formItemLayoutWithOutLabel}>\r\n              <Button type=\"dashed\" onClick={this.add} style={{ width: '80%' }}>\r\n                <Icon type=\"plus\" /> Add Course\r\n              </Button>\r\n            </Form.Item>\r\n            <Form.Item {...formItemLayoutWithOutLabel}>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n        <Col md={16} xs={24}>\r\n          <Cards courses = {arr} />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedDynamicFieldSet = Form.create({ name: 'dynamic_form_item' })(DynamicFieldSet);\r\n\r\nexport default WrappedDynamicFieldSet;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport { Icon } from 'antd'\r\nimport Input from './Components/Input';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app\"> \r\n        <h1>Final Exam Date Finder (McGill Univeristy)</h1>\r\n        <p>\r\n          <a href=\"https://www.mcgill.ca/exams/\" target='_blank' rel=\"noopener noreferrer\">precise info </a> |\r\n          <a href=\"https://www.mcgill.ca/exams/buildings\" target='_blank' rel=\"noopener noreferrer\"> exam location </a> |\r\n          <a href='https://github.com/yingjie-xu/FindFinalDateMcGill' target='_blank' rel=\"noopener noreferrer\"> <Icon type='github' /> </a>\r\n        </p>\r\n        <div id=\"input\">\r\n          <Input /> \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}